load("C:/Users/LENOVO T14S/Desktop/Personal/Memoria/Memoria/11_12_2024.RData")
View(datos_iniciales)
View(datos_iniciales[["2014"]])
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("functions.R")
source("graphics.R")
# ==============================================
#  PROCESAMIENTO DE DATOS
# ==============================================
#  CONSOLIDADO DE DATOS POR AÑO
anios <- 2014:2023
anios_pre_pandemia <- c("2014", "2015", "2016", "2017", "2018", "2019")
anios_pandemia <- c("2020", "2021", "2022", "2023")
load("dataR/datos.RData")
load("dataR/resultados_eficiencia.RData")
load("dataR/malmquist.RData")
load("dataR/determinantes.RData")
# GRAFICA DE SENSIBILIDAD POR EFICIENCIA
graficar_correlaciones(resultados[["io"]][["resultados_correlacion"]][["correlaciones_lista"]], "io", c("vrs_i1", "vrs_i2", "vrs_i3", "crs_i1", "crs_i2",  "crs_i3"), "Sensibilidad por eliminación de DMU eficientes")
graficar_correlaciones(resultados[["oo"]][["resultados_correlacion"]][["correlaciones_lista"]], "oo", c("vrs_i1", "vrs_i2", "vrs_i3", "crs_i1", "crs_i2",  "crs_i3"),  "Sensibilidad por eliminación de DMU eficientes")
# GRAFICA DE DISTRIBUCIÓN DE EFICIENCIAS
grafica_eficiencias(resultados)
resultados_original <- resultados
resultados[["oo"]][["original"]] <- resultados_sin_atipicos[["oo"]][["iteracion_1_vrs"]]
# GRAFICA DE DISTRIBUCIÓN DE EFICIENCIAS
grafica_eficiencias(resultados)
View(resultados_sin_atipicos)
View(resultados)
View(resultados[["oo"]][["original"]][["2014"]][["data"]])
View(resultados_original)
View(resultados_sin_atipicos[["oo"]][["iteracion_1_vrs"]])
View(resultados_sin_atipicos[["oo"]][["iteracion_1_vrs"]][["2014"]][["data"]])
View(resultados_original)
resultados_original[["oo"]][["vector_outliers_vrs"]]+
fhg
resultados_original[["oo"]][["vector_outliers_vrs"]]
View(resultados_original[["oo"]][["original"]][["2014"]][["data"]])
View(resultados_sin_atipicos)
View(resultados_sin_atipicos[["oo"]][["iteracion_1_vrs"]][["2014"]][["data"]])
View(resultados_sin_atipicos[["oo"]][["iteracion_1_vrs"]][["2014"]][["data"]])
debug(resultados_corte)
resultados_sin_atipicos <- list(
io = resultados_corte(resultados$io, "io"),
oo = resultados_corte(resultados$oo, "oo")
)
resultados_sin_atipicos <- list(
io = resultados_corte(resultados$io, "io"),
oo = resultados_corte(resultados$oo, "oo")
)
View(resultados)
resultados[["io"]][["original"]][["2014"]][["data"]]
resultados[["io"]][["vector_outliers_crs"]]
View(datos)
testttt <- datos[["2014"]] %>%
filter(!(IdEstablecimiento %in% resultados[["io"]][["vector_outliers_vrs"]]))
View(testttt)
sensibilidad_parametro_general(testttt, testttt, TRUE, 0.99, "vrs", "io")
resultados_iteracion(testttt, "io")
View(datos)
# Aplicar el filtro a todos los años
datos_filtrados <- lapply(names(datos), function(anio) {
datos[[anio]] %>%
filter(!(IdEstablecimiento %in% resultados[["io"]][["vector_outliers_vrs"]]))
})
View(datos_filtrados)
# Mantener los nombres originales
names(datos_filtrados) <- names(datos)
View(datos_filtrados)
resultados_iteracion(datos_filtrados, "io")
anios <- c("2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022","2023")
original <-  sapply(datos_filtrados, function(data) analisis_dea_general(data, "io"), simplify = FALSE)
View(original)
View(original[["2014"]][["data"]])
lista_outliers_vrs <- list()
for (anio in anios) {
outliers_vrs <- boxplot.stats(iteracion_1_atipico[[anio]][["data"]]$vrs)$out
ids_outliers_vrs <- original[[anio]][["data"]] %>% filter(vrs %in% outliers_vrs) %>% select(IdEstablecimiento, vrs)
lista_outliers_vrs[[anio]] <- ids_outliers_vrs
}
iteracion_1_atipico <- aplicar_sensibilidad(datos_filtrados,lapply(original, `[[`, "data"), 0.99, "io", "vrs", FALSE)
lista_outliers_vrs <- list()
for (anio in anios) {
outliers_vrs <- boxplot.stats(iteracion_1_atipico[[anio]][["data"]]$vrs)$out
ids_outliers_vrs <- original[[anio]][["data"]] %>% filter(vrs %in% outliers_vrs) %>% select(IdEstablecimiento, vrs)
lista_outliers_vrs[[anio]] <- ids_outliers_vrs
}
View(lista_outliers_vrs)
grafica_eficiencias(iteracion_1_atipico)
View(resultados)
datos_filtrados_crs_io <- lapply(names(datos), function(anio) {
datos[[anio]] %>%
filter(!(IdEstablecimiento %in% resultados[["io"]][["vector_outliers_crs"]]))
})
datos_filtrados_vrs_oo <- lapply(names(datos), function(anio) {
datos[[anio]] %>%
filter(!(IdEstablecimiento %in% resultados[["oo"]][["vector_outliers_vrs"]]))
})
datos_filtrados_crs_oo <- lapply(names(datos), function(anio) {
datos[[anio]] %>%
filter(!(IdEstablecimiento %in% resultados[["oo"]][["vector_outliers_crs"]]))
})
# Aplicar el filtro a todos los años
datos_filtrados_vrs_io <- lapply(names(datos), function(anio) {
datos[[anio]] %>%
filter(!(IdEstablecimiento %in% resultados[["io"]][["vector_outliers_vrs"]]))
})
View(datos_filtrados_crs_io)
# Mantener los nombres originales
names(datos_filtrados_vrs_oo) <- names(datos)
names(datos_filtrados_crs_oo) <- names(datos)
names(datos_filtrados_vrs_io) <- names(datos)
names(datos_filtrados_crs_io) <- names(datos)
original_io <-  sapply(datos_filtrados_vrs_io, function(data) analisis_dea_general(data, "io"), simplify = FALSE)
View(original_io)
original_io_vrs <-  sapply(datos_filtrados_vrs_io, function(data) analisis_dea_general(data, "io"), simplify = FALSE)
original_oo_vrs <-  sapply(datos_filtrados_vrs_oo, function(data) analisis_dea_general(data, "oo"), simplify = FALSE)
original_io_crs <-  sapply(datos_filtrados_crs_io, function(data) analisis_dea_general(data, "io"), simplify = FALSE)
original_oo_crs <-  sapply(datos_filtrados_crs_oo, function(data) analisis_dea_general(data, "oo"), simplify = FALSE)
iteracion_1_atipico <- aplicar_sensibilidad(original_io_vrs,lapply(original_io_vrs, `[[`, "data"), 0.99, "io", "vrs", FALSE)
View(original_io_vrs)
View(resultados)
View(original_io)
# Función para crear dataframes por período
crear_dataframe_2 <- function(resultados, tipo, periodo) {
# Seleccionar rango de años según el período
rango <- switch(
periodo,
"todos" = 2014:2023,
"pre"   = 2014:2019,
"post"  = 2020:2023,
stop("Período no válido. Usa 'todos', 'pre' o 'post'.")
)
# Combinar datos de los años especificados
df <- do.call(rbind, lapply(rango, function(year) {
data <- resultados[[as.character(year)]][["data"]]
data$year <- as.factor(year)  # Añade columna del año como factor
return(data)
}))
return(df)
}
grafica_eficiencias_2 <- function(resultados) {
# Parámetros para iterar
tipos <- c("io", "oo")
periodos <- list(
"todos" = "2014 - 2023",
"pre" = "2014 - 2019",
"post" = "2020 - 2023"
)
# Generar gráficos para cada tipo y período
for (tipo in tipos) {
for (periodo in names(periodos)) {
# Crear dataframe
df <- crear_dataframe_2(resultados, tipo, periodo)
# Graficar VRS
print(graficar_boxplots(
df,
"vrs",
paste("Distribución de Eficiencia Técnica Orientación", ifelse(tipo == "io", "Entradas", "Salidas"), "(VRS)"),
paste("Período", periodos[[periodo]])
))
# Graficar CRS
print(graficar_boxplots(
df,
"crs",
paste("Distribución de Eficiencia Técnica Orientación", ifelse(tipo == "io", "Entradas", "Salidas"), "(CRS)"),
paste("Período", periodos[[periodo]])
))
}
}
}
grafica_eficiencias_2(original_io_vrs)
grafica_eficiencias_2(original_io_crs)
View(resultados)
iteracion_1_io_vrs <-  sapply(datos_filtrados_vrs_io, function(data) analisis_dea_general(data, "io"), simplify = FALSE)
iteracion_1_io_crs <-  sapply(datos_filtrados_vrs_io, function(data) analisis_dea_general(data, "io"), simplify = FALSE)
iteracion_1_oo_vrs <-  sapply(datos_filtrados_vrs_io, function(data) analisis_dea_general(data, "oo"), simplify = FALSE)
iteracion_1_oo_crs <-  sapply(datos_filtrados_vrs_io, function(data) analisis_dea_general(data, "oo"), simplify = FALSE)
View(iteracion_1_atipico)
iteracion_1_io_vrs <-  sapply(datos_filtrados_vrs_io, function(data) analisis_dea_general(data, "io"), simplify = FALSE)
iteracion_1_io_crs <-  sapply(datos_filtrados_vrs_io, function(data) analisis_dea_general(data, "io"), simplify = FALSE)
iteracion_1_oo_vrs <-  sapply(datos_filtrados_vrs_io, function(data) analisis_dea_general(data, "oo"), simplify = FALSE)
iteracion_1_oo_crs <-  sapply(datos_filtrados_vrs_io, function(data) analisis_dea_general(data, "oo"), simplify = FALSE)
iteracion_2_io_vrs <-  sapply(datos_filtrados_crs_oo, function(data) analisis_dea_general(data, "io"), simplify = FALSE)
iteracion_2_io_crs <-  sapply(datos_filtrados_crs_oo, function(data) analisis_dea_general(data, "io"), simplify = FALSE)
iteracion_2_oo_vrs <-  sapply(datos_filtrados_crs_oo, function(data) analisis_dea_general(data, "oo"), simplify = FALSE)
iteracion_2_oo_crs <-  sapply(datos_filtrados_crs_oo, function(data) analisis_dea_general(data, "oo"), simplify = FALSE)
iteracion_3_io_vrs <-  sapply(datos_filtrados_vrs_oo, function(data) analisis_dea_general(data, "io"), simplify = FALSE)
iteracion_3_io_crs <-  sapply(datos_filtrados_vrs_oo, function(data) analisis_dea_general(data, "io"), simplify = FALSE)
iteracion_3_oo_vrs <-  sapply(datos_filtrados_vrs_oo, function(data) analisis_dea_general(data, "oo"), simplify = FALSE)
iteracion_3_oo_crs <-  sapply(datos_filtrados_vrs_oo, function(data) analisis_dea_general(data, "oo"), simplify = FALSE)
iteracion_4_io_vrs <-  sapply(datos_filtrados_crs_io, function(data) analisis_dea_general(data, "io"), simplify = FALSE)
iteracion_4_io_crs <-  sapply(datos_filtrados_crs_io, function(data) analisis_dea_general(data, "io"), simplify = FALSE)
iteracion_4_oo_vrs <-  sapply(datos_filtrados_crs_io, function(data) analisis_dea_general(data, "oo"), simplify = FALSE)
iteracion_4_oo_crs <-  sapply(datos_filtrados_crs_io, function(data) analisis_dea_general(data, "oo"), simplify = FALSE)
