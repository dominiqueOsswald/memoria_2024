library(readxl)
library(readxl)
library(openxlsx)
library(dplyr)
library(deaR)
install.packages("readxl")
library(dplyr)
load("~/Escritorio/MEMORIA/Memoria/RESULTADOS_COMBINADOS_in_vrs.RData")
View(resultados_combinados)
resultado_in <- resultados_combinados
load("~/Escritorio/MEMORIA/Memoria/RESULTADOS_COMBINADOS.RData")
View(resultados_combinados)
View(resultado_in)
View(resultados_combinados)
load("~/Escritorio/MEMORIA/Memoria/RESULTADOS_COMBINADOS_OUT.RData")
View(resultados_combinados)
View(resultados_combinados)
load("~/Escritorio/MEMORIA/Memoria/RESPALDO_17.RData")
path_hospitales_complejidades <- paste0("data/hospitales.csv")
hospitales_complejidades <- read.csv(path_hospitales_complejidades) %>% rename("IdEstablecimiento" = "hospital_id")
for (year in 2014:2023) {
resultados_usar[[orientacion]]$original[[as.character(year)]]$data <- resultados_usar[[orientacion]]$original[[as.character(year)]]$data %>%
left_join(hospitales_complejidades %>% select(IdEstablecimiento, complejidad),
by = "IdEstablecimiento")
}
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("functions.R")
source("graphics.R")
orientacion <- "oo"
retorno <- "vrs"
columna <- "vrs_oo"
path_hospitales_complejidades <- paste0("data/hospitales.csv")
hospitales_complejidades <- read.csv(path_hospitales_complejidades) %>% rename("IdEstablecimiento" = "hospital_id")
for (year in 2014:2023) {
resultados_usar[[orientacion]]$original[[as.character(year)]]$data <- resultados_usar[[orientacion]]$original[[as.character(year)]]$data %>%
left_join(hospitales_complejidades %>% select(IdEstablecimiento, complejidad),
by = "IdEstablecimiento")
}
# ALTA COMPLEJIDAD
ef_tec_alta <- guardar_dataframe_por_columna(resultados_usar[["oo"]], retorno)
ef_tec_alta
# ALTA COMPLEJIDAD
ef_tec_alta <- guardar_dataframe_por_columna(resultados_usar[["oo"]], retorno)
ef_tec <- guardar_dataframe_por_columna(resultados_usar[["oo"]], retorno)
# ALTA COMPLEJIDAD
ef_tec_alta <- guardar_dataframe_por_columna(resultados_usar[[orientacion]], retorno)
path_hospitales_complejidades <- paste0("data/hospitales.csv")
hospitales_complejidades <- read.csv(path_hospitales_complejidades) %>% rename("IdEstablecimiento" = "hospital_id")
for (year in 2014:2023) {
resultados_usar[[orientacion]]$original[[as.character(year)]]$data <- resultados_usar[[orientacion]]$original[[as.character(year)]]$data %>%
left_join(hospitales_complejidades %>% select(IdEstablecimiento, complejidad),
by = "IdEstablecimiento")
}
View(resultados_usar)
View(hospitales_complejidades)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("functions.R")
source("graphics.R")
# ==============================================
#  PRE PROCESAMIENTO DE DATOS
# ==============================================
#  CONSOLIDADO DE DATOS POR AÑO
anios <- 2014:2023
anios_pre_pandemia <- c("2014", "2015", "2016", "2017", "2018", "2019")
anios_pandemia <- c("2020", "2021", "2022", "2023")
datos_iniciales <- lapply(anios, consolidar_datos_por_anio)
names(datos_iniciales) <- as.character(anios)
# Encontrar las DMUs comunes en todos los años y filtrar los datos para incluir solo esas DMUs
dmus_comunes <- Reduce(intersect, lapply(datos_iniciales, `[[`, "IdEstablecimiento"))
datos <- lapply(datos_iniciales, function(data) data[data$IdEstablecimiento %in% dmus_comunes, ])
View(datos)
#  CALCULO DE EFICIENCIA EN TODOS LOS AÑOS Y REVISIÓN DE
#  SENSIBILIDAD - ELIMINACION EFICIENTES
resultados <- list(io = resultados_iteracion(datos, "io"),
oo = resultados_iteracion(datos, "oo"))
analisis_dea_general <- function(data, orientation) {
# --- Preparar inputs y outputs
model <- make_deadata(data, ni=3, no="IdEstablecimiento", dmus=3, inputs=8:10, outputs=5:7)
#browser()
# ---Aplicar DEA con la orientación y RTS (VRS y CRS)
resultado_dea_vrs <- model_basic(model, orientation=orientation, rts="vrs", dmu_eval = 1:nrow(data), dmu_ref = 1:nrow(data))
resultado_dea_crs <- model_basic(model, orientation=orientation, rts="crs", dmu_eval = 1:nrow(data), dmu_ref = 1:nrow(data))
#--- Calcular eficiencias
eficiencia_vrs <- deaR::efficiencies(resultado_dea_vrs)
eficiencia_crs <- deaR::efficiencies(resultado_dea_crs)
if (orientation == "oo"){
eficiencia_vrs <- normalize_max_min(eficiencia_vrs)
eficiencia_crs <- normalize_max_min(eficiencia_crs)
}
# Crear dataframe con eficiencias y retorno a escala
eficiencia_df <- data.frame(
IdEstablecimiento = data$IdEstablecimiento,
Nombre = data$'Nombre Establecimiento',
complejidad = data$complejidad,
Region = data$'Region',
vrs = round(eficiencia_vrs, 3),
crs = round(eficiencia_crs, 3),
escala = round(eficiencia_crs / eficiencia_vrs, 3),
latitud = data$latitud,
longitud = data$longitud,
region_id = data$region_id
)
return(list(data = eficiencia_df,
dea_vrs = resultado_dea_vrs,
dea_crs = resultado_dea_crs))
}
analisis_dea_general <- function(data, orientation) {
# --- Preparar inputs y outputs
model <- make_deadata(data, ni=3, no="IdEstablecimiento", dmus=3, inputs=8:10, outputs=5:7)
#browser()
# ---Aplicar DEA con la orientación y RTS (VRS y CRS)
resultado_dea_vrs <- model_basic(model, orientation=orientation, rts="vrs", dmu_eval = 1:nrow(data), dmu_ref = 1:nrow(data))
resultado_dea_crs <- model_basic(model, orientation=orientation, rts="crs", dmu_eval = 1:nrow(data), dmu_ref = 1:nrow(data))
#--- Calcular eficiencias
eficiencia_vrs <- deaR::efficiencies(resultado_dea_vrs)
eficiencia_crs <- deaR::efficiencies(resultado_dea_crs)
if (orientation == "oo"){
eficiencia_vrs <- normalize_max_min(eficiencia_vrs)
eficiencia_crs <- normalize_max_min(eficiencia_crs)
}
# Crear dataframe con eficiencias y retorno a escala
eficiencia_df <- data.frame(
IdEstablecimiento = data$IdEstablecimiento,
Nombre = data$'Nombre Establecimiento',
complejidad = data$complejidad,
Region = data$'Region',
vrs = round(eficiencia_vrs, 3),
crs = round(eficiencia_crs, 3),
escala = round(eficiencia_crs / eficiencia_vrs, 3),
latitud = data$latitud,
longitud = data$longitud,
region_id = data$region_id
)
return(list(data = eficiencia_df,
dea_vrs = resultado_dea_vrs,
dea_crs = resultado_dea_crs))
}
#  CALCULO DE EFICIENCIA EN TODOS LOS AÑOS Y REVISIÓN DE
#  SENSIBILIDAD - ELIMINACION EFICIENTES
resultados <- list(io = resultados_iteracion(datos, "io"),
oo = resultados_iteracion(datos, "oo"))
View(resultados)
datos_sin_atipicos <- datos_filtrados_atipicos(datos,resultados)
resultados_sin_atipicos <- list(
vrs_io = list(io = resultados_iteracion(datos_sin_atipicos[["vrs_io"]], "io"),oo = resultados_iteracion(datos_sin_atipicos[["vrs_io"]], "oo")),
crs_io = list(io = resultados_iteracion(datos_sin_atipicos[["crs_io"]], "io"),oo = resultados_iteracion(datos_sin_atipicos[["crs_io"]], "oo")),
vrs_oo = list(io = resultados_iteracion(datos_sin_atipicos[["vrs_oo"]], "io"),oo = resultados_iteracion(datos_sin_atipicos[["vrs_oo"]], "oo")),
crs_oo = list(io = resultados_iteracion(datos_sin_atipicos[["crs_oo"]], "io"),oo = resultados_iteracion(datos_sin_atipicos[["crs_oo"]], "oo")),
esc_io = list(io = resultados_iteracion(datos_sin_atipicos[["esc_io"]], "io"),oo = resultados_iteracion(datos_sin_atipicos[["esc_io"]], "oo")),
esc_oo = list(io = resultados_iteracion(datos_sin_atipicos[["esc_oo"]], "io"),oo = resultados_iteracion(datos_sin_atipicos[["esc_oo"]], "oo"))
)
