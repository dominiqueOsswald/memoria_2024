#Los hospitales chilenos de alta complejidad han mostrado variaciones significativas
#en su eficiencia técnica entre 2014 y 2023. Los cambios más relevantes se concentran
#en los años anteriores a 2020, mientras que en los años posteriores se aprecia una
#relativa estabilización. Las caídas en eficiencia no son consistentes ni generalizadas
#en el periodo post-pandemia. Esto podría deberse a una mayor estandarización de procesos,
#mejoras tecnológicas o un sistema que se ha adaptado mejor a nuevas condiciones.
# - Malmquist
malm_alta_long <- malm_compl %>%
filter(complejidad == "Alta") %>%
select(-c(11)) %>%
pivot_longer(cols = -IdEstablecimiento, names_to = "Año", values_to = "Valor") %>%
mutate(
Año = as.factor(sub(".*_", "", Año))) %>%
group_by(IdEstablecimiento) %>%
filter(n_distinct(Año) == max(n_distinct(Año))) %>%
ungroup()
# 3. Verificar que no haya NAs
sum(is.na(malm_alta_long$Valor))  # Debe ser 0
alta_malm <- analisis_eficiencia_tecnica(malm_alta_long)
##########################
# --- MEDIANA COMPLEJIDAD
ef_tec_mediana_long <- ef_tec_all %>%
filter(complejidad == "Mediana") %>%
select(-c(2, 3)) %>%
pivot_longer(cols = -IdEstablecimiento, names_to = "Año", values_to = "Valor")
mediana_ef <- analisis_eficiencia_tecnica(ef_tec_mediana_long)
#Los hospitales chilenos de mediana complejidad presentaron algunas variaciones
#significativas en su eficiencia técnica a lo largo del tiempo, especialmente entre
#2014 y 2020. Sin embargo, estas diferencias no son sistemáticas, y en los últimos años
#(2021–2023) se observa una estabilización relativa. La evidencia sugiere que, si bien
#hubo ciertos descensos en eficiencia en años específicos, la mediana de eficiencia
#técnica no cambió de forma significativa entre periodos amplios, como pre y post pandemia.
#Estos resultados podrían reflejar un sistema más resiliente de lo esperado o un efecto
#de intervenciones puntuales de gestión, más que cambios estructurales generalizados.
# - Malmquist
malm_mediana_long <- malm_compl %>%
filter(complejidad == "Mediana") %>%
select(-c(11)) %>%
pivot_longer(cols = -IdEstablecimiento, names_to = "Año", values_to = "Valor") %>%
mutate(
Año = as.factor(sub(".*_", "", Año))) %>%
group_by(IdEstablecimiento) %>%
filter(n_distinct(Año) == max(n_distinct(Año))) %>%
ungroup()
# 3. Verificar que no haya NAs
sum(is.na(malm_mediana_long$Valor))  # Debe ser 0
mediana_malm <- analisis_eficiencia_tecnica(malm_mediana_long)
##########################
# --- BAJA COMPLEJIDAD
ef_tec_baja_long <- ef_tec_all %>%
filter(complejidad == "Baja") %>%
select(-c(2, 3)) %>%
pivot_longer(cols = -IdEstablecimiento, names_to = "Año", values_to = "Valor")
baja_ef <- analisis_eficiencia_tecnica(ef_tec_baja_long)
# - Malmquist
malm_baja_long <- malm_compl %>%
filter(complejidad == "Baja") %>%
select(-c(11)) %>%
pivot_longer(cols = -IdEstablecimiento, names_to = "Año", values_to = "Valor") %>%
mutate(
Año = as.factor(sub(".*_", "", Año))) %>%
group_by(IdEstablecimiento) %>%
filter(n_distinct(Año) == max(n_distinct(Año))) %>%
ungroup()
# 3. Verificar que no haya NAs
sum(is.na(malm_baja_long$Valor))  # Debe ser 0
baja_malm <- analisis_eficiencia_tecnica(malm_baja_long)
# ==============================================
#    DETERMINANTES
# ==============================================
# REVISAR SI HAY SIGNIFICANCIA POR AÑO EN DETERMINANTES:
df_incmse <- resultados_importancia[["df_incmse_10"]]
df_incmse_all <- df_incmse
df_incmse_pre <- df_incmse[,c(1:6)]
df_incmse_post <- df_incmse[,c(1,7:10)]
df_long_all_comp <- df_incmse_all %>% pivot_longer(-Variable, names_to = "Año", values_to = "Valor")
df_long_all_comp <- na.omit(df_long_all_comp)
# Calcular la mediana de los valores en el periodo "pre" (columnas 2 a 7)
df_median_pre <- df_incmse_pre %>%
mutate(Mediana_Pre = apply(df_incmse_pre[, -1], 1, median, na.rm = TRUE)) %>%
select(Variable, Mediana_Pre)  # Seleccionar solo Variable y la mediana
# Calcular la mediana de los valores en el periodo "post" (columnas 8 a 11)
df_median_post <- df_incmse_post %>%
mutate(Mediana_Post = apply(df_incmse_post[, -1], 1, median, na.rm = TRUE)) %>%
select(Variable, Mediana_Post)  # Seleccionar solo Variable y la mediana
# Unir ambos dataframes en un único dataframe con las medianas
df_median <- left_join(df_median_pre, df_median_post, by = "Variable")
df_median <- calcular_estadisticas(df_median) %>% filter(Frecuencia > 1)
df_median <- df_median[,-c(3,4)]
df_incmse_all_est <- calcular_estadisticas(df_incmse_all) %>% filter(Frecuencia > 1)
df_incmse_all <- df_incmse_all_est[,c(1:11)]
df_incmse_pre_est <- calcular_estadisticas(df_incmse_pre) %>% filter(Frecuencia > 1)
df_incmse_pre <- df_incmse_pre_est[,c(1:7)]
df_incmse_post_est <- calcular_estadisticas(df_incmse_post) %>% filter(Frecuencia > 1)
df_incmse_post <- df_incmse_post_est[,c(1:5)]
# Convertir a formato largo (tidy)
df_long_all <- df_incmse_all %>% pivot_longer(-Variable, names_to = "Año", values_to = "Valor")
df_long_all <- na.omit(df_long_all)
df_long_pre <- df_incmse_pre %>% pivot_longer(-Variable, names_to = "Año", values_to = "Valor")
df_long_pre <- na.omit(df_long_pre)
df_long_post <- df_incmse_post %>% pivot_longer(-Variable, names_to = "Año", values_to = "Valor")
df_long_post <- na.omit(df_long_post)
df_long_pre_post <- df_median %>% pivot_longer(-Variable, names_to = "Periodo", values_to = "Valor")
df_long_pre_post <- na.omit(df_long_pre_post)
# Aplicar Kruskal-Wallis para cada fila (variable)
kruskal_results_all <- df_long_all %>%
group_by(Variable) %>%
summarise(
p_value = kruskal.test(Valor ~ Año)$p.value
)
# Aplicar Kruskal-Wallis para cada fila (variable)
kruskal_results_pre <- df_long_pre %>%
group_by(Variable) %>%
summarise(
p_value = kruskal.test(Valor ~ Año)$p.value
)
# Aplicar Kruskal-Wallis para cada fila (variable)
kruskal_results_post <- df_long_post %>%
group_by(Variable) %>%
summarise(
p_value = kruskal.test(Valor ~ Año)$p.value
)
# Aplicar Kruskal-Wallis para cada fila (variable)
kruskal_results_pre_post <- df_long_pre_post %>%
group_by(Variable) %>%
summarise(
p_value = kruskal.test(Valor ~ Periodo)$p.value
)
print(n=100,kruskal_results_all)
print(n=100,kruskal_results_pre)
print(n=100,kruskal_results_post)
print(n=100,kruskal_results_pre_post)
df_long_kruskal_all <- df_long_all %>% filter(Variable %in% kruskal_results_all$Variable)
df_long_kruskal_pre <- df_long_pre %>% filter(Variable %in% kruskal_results_pre$Variable)
df_long_kruskal_post <- df_long_post %>% filter(Variable %in% kruskal_results_post$Variable)
# Gráfico de evolución de las variables analizadas
grafica <- ggplot(df_long_all_comp, aes(x = Año, y = Variable, fill = Valor)) +
geom_tile() +
theme_bw() +  # Cambiar a theme_bw() para fondo blanco
labs(title = "Matriz de valores por variable y año",
x = "Año", y = "Variable", fill = "Valor") +
scale_fill_gradientn(
colors = brewer.pal(11, "RdYlGn"),  # Paleta de colores RdYlGn
limits = range(df_long_all_comp$Valor, na.rm = TRUE)  # Escala de valores automática
) +
theme(
panel.background = element_blank(),  # Fondo del panel en blanco
plot.background = element_blank(),   # Fondo del gráfico en blanco
panel.grid.major = element_blank(),  # Eliminar líneas de la cuadrícula principales
panel.grid.minor = element_blank()   # Eliminar líneas de la cuadrícula secundarias
)
ggsave(paste0("determinantes.jpg"), plot = grafica, width = 15, height = 20, dpi = 500)
grafica <- ggplot(df_long_kruskal_all, aes(x = Año, y = Variable, fill = Valor)) +
geom_tile() +
theme_minimal() +
labs(title = "Matriz de valores por variable y año",
x = "Año", y = "Variable", fill = "Valor") +
scale_fill_gradientn(
colors = brewer.pal(11, "RdYlGn"),  # Paleta de colores RdYlGn
limits = range(df_long_kruskal_all$Valor, na.rm = TRUE)  # Escala de valores automática
)
ggsave(paste0("determinantes","_","todos",".jpg"), plot = grafica, width = 10, height = 8, dpi = 300)
grafica <- ggplot(df_long_kruskal_pre, aes(x = Año, y = Variable, fill = Valor)) +
geom_tile() +
theme_minimal() +
labs(title = "Matriz de valores por variable y año",
x = "Año", y = "Variable", fill = "Valor") +
scale_fill_gradientn(
colors = brewer.pal(11, "RdYlGn"),  # Paleta de colores RdYlGn
limits = range(df_long_kruskal_pre$Valor, na.rm = TRUE)  # Escala de valores automática
)
ggsave(paste0("determinantes","_","pre",".jpg"), plot = grafica, width = 10, height = 8, dpi = 300)
grafica <- ggplot(df_long_kruskal_post, aes(x = Año, y = Variable, fill = Valor)) +
geom_tile() +
theme_minimal() +
labs(title = "Matriz de valores por variable y año",
x = "Año", y = "Variable", fill = "Valor") +
scale_fill_gradientn(
colors = brewer.pal(11, "RdYlGn"),  # Paleta de colores RdYlGn
limits = range(df_long_kruskal_post$Valor, na.rm = TRUE)  # Escala de valores automática
)
ggsave(paste0("determinantes","_","post",".jpg"), plot = grafica, width = 10, height = 8, dpi = 300)
df_incmse_est <- resultados_importancia[["df_incmse_est_10"]]
df_incmse_est <- df_incmse_est %>%
left_join(kruskal_results_all, by = "Variable") %>%
rename(P_value_all = p_value)  # Cambia el nombre de la columna
df_incmse_est <- df_incmse_est %>%
left_join(kruskal_results_pre, by = "Variable") %>%
rename(P_value_pre = p_value)  # Cambia el nombre de la columna
df_incmse_est <- df_incmse_est %>%
left_join(kruskal_results_post, by = "Variable") %>%
rename(P_value_post = p_value)  # Cambia el nombre de la columna
# Almacenar resultados en excel
guardar_resultados(
dataframes = resultados_usar[[orientacion]],
retorno,
df_incmse_est,
malmquist = malmquist_indices$index,
carpeta=paste0("results/",columna2),
archivo_salida = "RESULTADOS.xlsx",
prefijo = orientacion
)
# Gráfico de evolución de las 10 variables
#ggplot(df_long_10, aes(x = Año, y = Valor, group = Variable, color = Variable)) +
#  geom_line() +
#  geom_point() +
#  theme_minimal() +
#  labs(title = "Evolución de las primeras 10 variables (2014-2023)",
#       x = "Año", y = "Valor de la Variable")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("main_orientacion.R")
# ==============================================
#    VARIABLES
# ==============================================
# Lista de años disponibles
anios <- names(datos)
# Lista de columnas de interés
columnas_interes <- c("Egresos.GRD", "Consultas", "Quirofano", "X21_value",
"X22_value", "dias_cama_disponible")
# TODOS los hospitales
ef_tec_all <- guardar_dataframe_por_columna(resultados_usar[[orientacion]], retorno)
ef_tec <- ef_tec_all[,-c(2,3)]
# Variables de interés
variables_interes <- c("X21_value", "X22_value")
mal_tec <- malmquist_indices[["index"]][, c(1:10)] %>%
na.omit() %>% rename(IdEstablecimiento = ID)
malm_compl <- mal_tec %>%
left_join(ef_tec_all %>% select(IdEstablecimiento, complejidad),
by = "IdEstablecimiento")
# ==============================================
#    REVISAR LA DIFERENCIA ENTRE VARIABLES
# ==============================================
# ---- ALMACENANDO LAS VARIABLES DE ENTRADAS DEL MODELO
# Crear un listado de dataframes por cada columna
dataframes_por_columna <- lapply(columnas_interes, function(col) {
df <- do.call(cbind, lapply(anios, function(anio) datos[[anio]][[col]]))
colnames(df) <- anios
df <- as.data.frame(df)
return(df)
})
# Asignar nombres a los dataframes generados
names(dataframes_por_columna) <- columnas_interes
# ==============================================
#    EFICIENCIA
# ==============================================
# ------ TODOS LOS ESTABLECIMIENTOS
normalidad_EF <- verificar_normalidad(ef_tec,c(2:11))
print(normalidad_EF)
# Resultados: NO SON NORMALES LOS DATOS
hospitals_long_ef <- ef_tec %>% pivot_longer(cols = -c(IdEstablecimiento), names_to = "Año", values_to = "Valor")
all_ef <- analisis_eficiencia_tecnica(hospitals_long_ef)
#El análisis global indica que hubo cambios estadísticamente significativos en la
#eficiencia técnica de los hospitales chilenos entre los años 2014 y 2023. Algunos
#años muestran mejoras, mientras que otros presentan caídas, especialmente durante o
#después de eventos disruptivos como la pandemia. No obstante, al analizar la diferencia
#en medianas mediante bootstrap, no se encontró una diferencia estadísticamente robusta
#entre periodos específicos. Esto sugiere que, aunque hay cambios en la distribución
#general, la mediana de eficiencia podría haberse mantenido relativamente estable en
#algunos intervalos.
#Este comportamiento no lineal y heterogéneo podría deberse a la implementación desigual
#de políticas públicas, diferencias regionales, variabilidad en recursos humanos y
#materiales, o efectos externos como emergencias sanitarias.
# --- MALMQUIST
normalidad_malm <- verificar_normalidad(mal_tec,c(2:10))
print(normalidad_malm)
df_long_malm <- mal_tec %>%
pivot_longer(
cols = starts_with("20"),
names_to = "Año",
values_to = "Valor") %>%
mutate(Año = as.factor(sub(".*_", "", Año)))  %>%
group_by(IdEstablecimiento) %>%
filter(n_distinct(Año) == max(n_distinct(Año))) %>%
ungroup()
# 3. Verificar que no haya NAs
#sum(is.na(df_complete$Valor))  # Debe ser 0
all_malm <- analisis_eficiencia_tecnica(df_long_malm)
#Aunque la prueba de Friedman no detecta diferencias globales significativas, las
#pruebas post-hoc y el intervalo bootstrap indican que hubo variaciones importantes
#en la productividad técnica de los hospitales a lo largo del tiempo, especialmente
#entre años clave como 2016, 2018, 2020 y 2022.
#El hecho de que el intervalo bootstrap indique una diferencia significativa en la
#mediana sugiere que, a pesar de la heterogeneidad en los datos y de la exclusión de
#algunos hospitales por valores NA, hubo un cambio positivo neto en la productividad.
#Esto podría asociarse a procesos de modernización, digitalización, políticas de eficiencia
#o efectos adaptativos tras la pandemia.
# ---- CONCLUSION:
#Los análisis no muestran evidencia estadísticamente significativa de una disminución
#de al menos un 5% en la mediana de la eficiencia técnica entre 2020 y 2023 comparado
#con 2014–2019.
#Aunque existen caídas puntuales en algunos años (como 2020), estas no son sostenidas
#ni generalizadas, y el intervalo bootstrap tampoco respalda esa caída del 5%.
#Además, el índice de Malmquist incluso sugiere una leve mejora del desempeño productivo.
# -------------------------------------------------------------
# -------------------------------------------------------------
# ----- ANÁLISIS POR COMPLEJIDAD DE HOSPITAL
##########################
# --- ALTA COMPLEJIDAD
ef_tec_alta_long <- ef_tec_all %>%
filter(complejidad == "Alta") %>%
select(-c(2, 3)) %>%
pivot_longer(cols = -IdEstablecimiento, names_to = "Año", values_to = "Valor")
alta_ef <- analisis_eficiencia_tecnica(ef_tec_alta_long)
#Los hospitales chilenos de alta complejidad han mostrado variaciones significativas
#en su eficiencia técnica entre 2014 y 2023. Los cambios más relevantes se concentran
#en los años anteriores a 2020, mientras que en los años posteriores se aprecia una
#relativa estabilización. Las caídas en eficiencia no son consistentes ni generalizadas
#en el periodo post-pandemia. Esto podría deberse a una mayor estandarización de procesos,
#mejoras tecnológicas o un sistema que se ha adaptado mejor a nuevas condiciones.
# - Malmquist
malm_alta_long <- malm_compl %>%
filter(complejidad == "Alta") %>%
select(-c(11)) %>%
pivot_longer(cols = -IdEstablecimiento, names_to = "Año", values_to = "Valor") %>%
mutate(
Año = as.factor(sub(".*_", "", Año))) %>%
group_by(IdEstablecimiento) %>%
filter(n_distinct(Año) == max(n_distinct(Año))) %>%
ungroup()
# 3. Verificar que no haya NAs
sum(is.na(malm_alta_long$Valor))  # Debe ser 0
alta_malm <- analisis_eficiencia_tecnica(malm_alta_long)
##########################
# --- MEDIANA COMPLEJIDAD
ef_tec_mediana_long <- ef_tec_all %>%
filter(complejidad == "Mediana") %>%
select(-c(2, 3)) %>%
pivot_longer(cols = -IdEstablecimiento, names_to = "Año", values_to = "Valor")
mediana_ef <- analisis_eficiencia_tecnica(ef_tec_mediana_long)
#Los hospitales chilenos de mediana complejidad presentaron algunas variaciones
#significativas en su eficiencia técnica a lo largo del tiempo, especialmente entre
#2014 y 2020. Sin embargo, estas diferencias no son sistemáticas, y en los últimos años
#(2021–2023) se observa una estabilización relativa. La evidencia sugiere que, si bien
#hubo ciertos descensos en eficiencia en años específicos, la mediana de eficiencia
#técnica no cambió de forma significativa entre periodos amplios, como pre y post pandemia.
#Estos resultados podrían reflejar un sistema más resiliente de lo esperado o un efecto
#de intervenciones puntuales de gestión, más que cambios estructurales generalizados.
# - Malmquist
malm_mediana_long <- malm_compl %>%
filter(complejidad == "Mediana") %>%
select(-c(11)) %>%
pivot_longer(cols = -IdEstablecimiento, names_to = "Año", values_to = "Valor") %>%
mutate(
Año = as.factor(sub(".*_", "", Año))) %>%
group_by(IdEstablecimiento) %>%
filter(n_distinct(Año) == max(n_distinct(Año))) %>%
ungroup()
# 3. Verificar que no haya NAs
sum(is.na(malm_mediana_long$Valor))  # Debe ser 0
mediana_malm <- analisis_eficiencia_tecnica(malm_mediana_long)
##########################
# --- BAJA COMPLEJIDAD
ef_tec_baja_long <- ef_tec_all %>%
filter(complejidad == "Baja") %>%
select(-c(2, 3)) %>%
pivot_longer(cols = -IdEstablecimiento, names_to = "Año", values_to = "Valor")
baja_ef <- analisis_eficiencia_tecnica(ef_tec_baja_long)
# - Malmquist
malm_baja_long <- malm_compl %>%
filter(complejidad == "Baja") %>%
select(-c(11)) %>%
pivot_longer(cols = -IdEstablecimiento, names_to = "Año", values_to = "Valor") %>%
mutate(
Año = as.factor(sub(".*_", "", Año))) %>%
group_by(IdEstablecimiento) %>%
filter(n_distinct(Año) == max(n_distinct(Año))) %>%
ungroup()
# 3. Verificar que no haya NAs
sum(is.na(malm_baja_long$Valor))  # Debe ser 0
baja_malm <- analisis_eficiencia_tecnica(malm_baja_long)
# ==============================================
#    DETERMINANTES
# ==============================================
# REVISAR SI HAY SIGNIFICANCIA POR AÑO EN DETERMINANTES:
df_incmse <- resultados_importancia[["df_incmse_10"]]
df_incmse_all <- df_incmse
df_incmse_pre <- df_incmse[,c(1:6)]
df_incmse_post <- df_incmse[,c(1,7:10)]
df_long_all_comp <- df_incmse_all %>% pivot_longer(-Variable, names_to = "Año", values_to = "Valor")
df_long_all_comp <- na.omit(df_long_all_comp)
# Calcular la mediana de los valores en el periodo "pre" (columnas 2 a 7)
df_median_pre <- df_incmse_pre %>%
mutate(Mediana_Pre = apply(df_incmse_pre[, -1], 1, median, na.rm = TRUE)) %>%
select(Variable, Mediana_Pre)  # Seleccionar solo Variable y la mediana
# Calcular la mediana de los valores en el periodo "post" (columnas 8 a 11)
df_median_post <- df_incmse_post %>%
mutate(Mediana_Post = apply(df_incmse_post[, -1], 1, median, na.rm = TRUE)) %>%
select(Variable, Mediana_Post)  # Seleccionar solo Variable y la mediana
# Unir ambos dataframes en un único dataframe con las medianas
df_median <- left_join(df_median_pre, df_median_post, by = "Variable")
df_median <- calcular_estadisticas(df_median) %>% filter(Frecuencia > 1)
df_median <- df_median[,-c(3,4)]
df_incmse_all_est <- calcular_estadisticas(df_incmse_all) %>% filter(Frecuencia > 1)
df_incmse_all <- df_incmse_all_est[,c(1:11)]
df_incmse_pre_est <- calcular_estadisticas(df_incmse_pre) %>% filter(Frecuencia > 1)
df_incmse_pre <- df_incmse_pre_est[,c(1:7)]
df_incmse_post_est <- calcular_estadisticas(df_incmse_post) %>% filter(Frecuencia > 1)
df_incmse_post <- df_incmse_post_est[,c(1:5)]
# Convertir a formato largo (tidy)
df_long_all <- df_incmse_all %>% pivot_longer(-Variable, names_to = "Año", values_to = "Valor")
df_long_all <- na.omit(df_long_all)
df_long_pre <- df_incmse_pre %>% pivot_longer(-Variable, names_to = "Año", values_to = "Valor")
df_long_pre <- na.omit(df_long_pre)
df_long_post <- df_incmse_post %>% pivot_longer(-Variable, names_to = "Año", values_to = "Valor")
df_long_post <- na.omit(df_long_post)
df_long_pre_post <- df_median %>% pivot_longer(-Variable, names_to = "Periodo", values_to = "Valor")
df_long_pre_post <- na.omit(df_long_pre_post)
# Aplicar Kruskal-Wallis para cada fila (variable)
kruskal_results_all <- df_long_all %>%
group_by(Variable) %>%
summarise(
p_value = kruskal.test(Valor ~ Año)$p.value
)
# Aplicar Kruskal-Wallis para cada fila (variable)
kruskal_results_pre <- df_long_pre %>%
group_by(Variable) %>%
summarise(
p_value = kruskal.test(Valor ~ Año)$p.value
)
# Aplicar Kruskal-Wallis para cada fila (variable)
kruskal_results_post <- df_long_post %>%
group_by(Variable) %>%
summarise(
p_value = kruskal.test(Valor ~ Año)$p.value
)
# Aplicar Kruskal-Wallis para cada fila (variable)
kruskal_results_pre_post <- df_long_pre_post %>%
group_by(Variable) %>%
summarise(
p_value = kruskal.test(Valor ~ Periodo)$p.value
)
print(n=100,kruskal_results_all)
print(n=100,kruskal_results_pre)
print(n=100,kruskal_results_post)
print(n=100,kruskal_results_pre_post)
df_long_kruskal_all <- df_long_all %>% filter(Variable %in% kruskal_results_all$Variable)
df_long_kruskal_pre <- df_long_pre %>% filter(Variable %in% kruskal_results_pre$Variable)
df_long_kruskal_post <- df_long_post %>% filter(Variable %in% kruskal_results_post$Variable)
# Gráfico de evolución de las variables analizadas
grafica <- ggplot(df_long_all_comp, aes(x = Año, y = Variable, fill = Valor)) +
geom_tile() +
theme_bw() +  # Cambiar a theme_bw() para fondo blanco
labs(title = "Matriz de valores por variable y año",
x = "Año", y = "Variable", fill = "Valor") +
scale_fill_gradientn(
colors = brewer.pal(11, "RdYlGn"),  # Paleta de colores RdYlGn
limits = range(df_long_all_comp$Valor, na.rm = TRUE)  # Escala de valores automática
) +
theme(
panel.background = element_blank(),  # Fondo del panel en blanco
plot.background = element_blank(),   # Fondo del gráfico en blanco
panel.grid.major = element_blank(),  # Eliminar líneas de la cuadrícula principales
panel.grid.minor = element_blank()   # Eliminar líneas de la cuadrícula secundarias
)
ggsave(paste0("determinantes.jpg"), plot = grafica, width = 15, height = 20, dpi = 500)
grafica <- ggplot(df_long_kruskal_all, aes(x = Año, y = Variable, fill = Valor)) +
geom_tile() +
theme_minimal() +
labs(title = "Matriz de valores por variable y año",
x = "Año", y = "Variable", fill = "Valor") +
scale_fill_gradientn(
colors = brewer.pal(11, "RdYlGn"),  # Paleta de colores RdYlGn
limits = range(df_long_kruskal_all$Valor, na.rm = TRUE)  # Escala de valores automática
)
ggsave(paste0("determinantes","_","todos",".jpg"), plot = grafica, width = 10, height = 8, dpi = 300)
grafica <- ggplot(df_long_kruskal_pre, aes(x = Año, y = Variable, fill = Valor)) +
geom_tile() +
theme_minimal() +
labs(title = "Matriz de valores por variable y año",
x = "Año", y = "Variable", fill = "Valor") +
scale_fill_gradientn(
colors = brewer.pal(11, "RdYlGn"),  # Paleta de colores RdYlGn
limits = range(df_long_kruskal_pre$Valor, na.rm = TRUE)  # Escala de valores automática
)
ggsave(paste0("determinantes","_","pre",".jpg"), plot = grafica, width = 10, height = 8, dpi = 300)
grafica <- ggplot(df_long_kruskal_post, aes(x = Año, y = Variable, fill = Valor)) +
geom_tile() +
theme_minimal() +
labs(title = "Matriz de valores por variable y año",
x = "Año", y = "Variable", fill = "Valor") +
scale_fill_gradientn(
colors = brewer.pal(11, "RdYlGn"),  # Paleta de colores RdYlGn
limits = range(df_long_kruskal_post$Valor, na.rm = TRUE)  # Escala de valores automática
)
ggsave(paste0("determinantes","_","post",".jpg"), plot = grafica, width = 10, height = 8, dpi = 300)
df_incmse_est <- resultados_importancia[["df_incmse_est_10"]]
df_incmse_est <- df_incmse_est %>%
left_join(kruskal_results_all, by = "Variable") %>%
rename(P_value_all = p_value)  # Cambia el nombre de la columna
df_incmse_est <- df_incmse_est %>%
left_join(kruskal_results_pre, by = "Variable") %>%
rename(P_value_pre = p_value)  # Cambia el nombre de la columna
df_incmse_est <- df_incmse_est %>%
left_join(kruskal_results_post, by = "Variable") %>%
rename(P_value_post = p_value)  # Cambia el nombre de la columna
# Almacenar resultados en excel
guardar_resultados(
dataframes = resultados_usar[[orientacion]],
retorno,
df_incmse_est,
malmquist = malmquist_indices$index,
carpeta=paste0("results/",columna2),
archivo_salida = "RESULTADOS.xlsx",
prefijo = orientacion
)
# Gráfico de evolución de las 10 variables
#ggplot(df_long_10, aes(x = Año, y = Valor, group = Variable, color = Variable)) +
#  geom_line() +
#  geom_point() +
#  theme_minimal() +
#  labs(title = "Evolución de las primeras 10 variables (2014-2023)",
#       x = "Año", y = "Valor de la Variable")
