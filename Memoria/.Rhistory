library(readxl)
library(readxl)
library(openxlsx)
library(dplyr)
library(deaR)
install.packages("readxl")
library(dplyr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Estos deben variar segun carpeta:
# - originales
# - output_vrs
# - output_crs
# - input_vrs
# - input_crs
carpeta <- "output_vrs"
source("data.R")
View(resultados)
analisis_dea_general <- function(data, orientation) {
# --- Preparar inputs y outputs
model <- make_deadata(data, ni=3, no="IdEstablecimiento", dmus=3, inputs=8:10, outputs=5:7)
#browser()
# ---Aplicar DEA con la orientaciÃ³n y RTS (VRS y CRS)
resultado_dea_vrs <- model_basic(model, orientation=orientation, rts="vrs", dmu_eval = 1:nrow(data), dmu_ref = 1:nrow(data))
resultado_dea_crs <- model_basic(model, orientation=orientation, rts="crs", dmu_eval = 1:nrow(data), dmu_ref = 1:nrow(data))
#--- Calcular eficiencias
eficiencia_vrs <- deaR::efficiencies(resultado_dea_vrs)
eficiencia_crs <- deaR::efficiencies(resultado_dea_crs)
if (orientation == "oo"){
eficiencia_vrs <- normalize_max_min(eficiencia_vrs)
eficiencia_crs <- normalize_max_min(eficiencia_crs)
}
# Crear dataframe con eficiencias y retorno a escala
eficiencia_df <- data.frame(
IdEstablecimiento = data$IdEstablecimiento,
Nombre = data$'Nombre Establecimiento',
Region = data$'Region',
vrs = round(eficiencia_vrs, 3),
crs = round(eficiencia_crs, 3),
escala = round(eficiencia_crs / eficiencia_vrs, 3),
latitud = data$latitud,
longitud = data$longitud,
region_id = data$region_id
)
return(list(data = eficiencia_df,
dea_vrs = resultado_dea_vrs,
dea_crs = resultado_dea_crs))
}
#  SENSIBILIDAD - ELIMINACION EFICIENTES
resultados <- list(io = resultados_iteracion(datos, "io"),oo = resultados_iteracion(datos, "oo"))
View(resultados)
resultados[["io"]][["original"]][["2014"]][["data"]][["escala"]]
View(resultados[["io"]][["original"]][["2014"]][["data"]])
resultados_usar <- resultados_sin_atipicos[["vrs_oo"]]
View(malmquist_indices)
View(malmquist_indices)
# Crear la lista in_esc dividiendo cada elemento de in_crs por in_vrs
malmquist_indices[["in_esc"]] <- list(
eficiencia = malmquist_indices[["in_crs"]][["eficiencia"]] / malmquist_indices[["in_vrs"]][["eficiencia"]],
index      = malmquist_indices[["in_crs"]][["index"]] / malmquist_indices[["in_vrs"]][["index"]],
tech       = malmquist_indices[["in_crs"]][["tech"]] / malmquist_indices[["in_vrs"]][["tech"]],
eff        = malmquist_indices[["in_crs"]][["eff"]] / malmquist_indices[["in_vrs"]][["eff"]]
)
# Verificar la estructura de la nueva lista
str(malmquist_indices[["in_esc"]])
malmquist_indices[["out_esc"]] <- list(
eficiencia = malmquist_indices[["out_crs"]][["eficiencia"]] / malmquist_indices[["out_vrs"]][["eficiencia"]],
index      = malmquist_indices[["out_crs"]][["index"]] / malmquist_indices[["out_vrs"]][["index"]],
tech       = malmquist_indices[["out_crs"]][["tech"]] / malmquist_indices[["out_vrs"]][["tech"]],
eff        = malmquist_indices[["out_crs"]][["eff"]] / malmquist_indices[["out_vrs"]][["eff"]]
)
View(resultados_importancia)
View(resultados_importancia)
