library(corrplot)
library(gridExtra)
library(purrr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("functions.R")
source("graphics.R")
anios <- c("2014", "2015", "2016", "2017", "2018", "2019","2020")
# Datos #
datos_iniciales <- list(
"2014" = consolidar_datos_por_anio(2014),
"2015" = consolidar_datos_por_anio(2015),
"2016" = consolidar_datos_por_anio(2016),
"2017" = consolidar_datos_por_anio(2017),
"2018" = consolidar_datos_por_anio(2018),
"2019" = consolidar_datos_por_anio(2019),
"2020" = consolidar_datos_por_anio(2020)
)
# Extraer los conjuntos de DMUs de cada año
dmus_por_anio <- lapply(datos_iniciales, function(data) data$IdEstablecimiento)
# Encontrar las DMUs comunes en todos los años
dmus_comunes <- Reduce(intersect, dmus_por_anio)
# Filtrar los datos de cada año para incluir solo las DMUs comunes
datos <- lapply(datos_iniciales, function(data) data[data$IdEstablecimiento %in% dmus_comunes, ])
# DEA - INPUT
resultados_in <- aplicar_analisis_dea(datos, "io")
# SENSIBILIDAD - VRS
resultados_in_2_vrs <- aplicar_sensibilidad(datos, lapply(resultados_in, `[[`, "data"), 0.99, "io", "vrs", FALSE)
resultados_in_3_vrs <- aplicar_sensibilidad(datos, lapply(resultados_in_2_vrs, `[[`, "data"), 0.99, "io", "vrs", FALSE)
# SENSIBILIDAD - CRS
resultados_in_2_crs <- aplicar_sensibilidad(datos, lapply(resultados_in, `[[`, "data"), 0.99, "io", "crs", FALSE)
resultados_in_3_crs <- aplicar_sensibilidad(datos, lapply(resultados_in_2_crs, `[[`, "data"), 0.99, "io", "crs", FALSE)
# Llamar a la función
lista_resultados_combinados_in <- combinar_resultados_iteraciones(resultados_in, resultados_in_2_vrs, resultados_in_3_vrs, resultados_in_2_crs, resultados_in_3_crs)
View(lista_resultados_combinados_in)
View(resultados_in)
malmquist_in_vrs <- calcular_malmquist(datos, "vrs", "in")
View(malmquist_in_vrs)
vrs_df <- resultados_in %>%
select(IdEstablecimiento, vrs) %>%
rename(ID = IdEstablecimiento) %>%
spread(key = "Año", value = "vrs")
vrs_df <- resultados_in %>%
select(IdEstablecimiento, vrs) %>%
rename(ID = IdEstablecimiento) %>%
spread(key = "Año", value = "vrs")
# Crear un dataframe para almacenar los valores de VRS y CRS por cada año
vrs_df <- data.frame(ID = resultados_in[["2014"]][["data"]][["IdEstablecimiento"]])
crs_df <- data.frame(ID = resultados_in[["2014"]][["data"]][["IdEstablecimiento"]])
# Iterar sobre cada año para llenar los dataframes
for (year in names(resultados_in)) {
vrs_df[[year]] <- resultados_in[[year]][["data"]][["vrs"]]
crs_df[[year]] <- resultados_in[[year]][["data"]][["crs"]]
}
vrs_df
View(vrs_df)
in_vrs_df <- data.frame(ID = resultados_in[["2014"]][["data"]][["IdEstablecimiento"]])
in_crs_df <- data.frame(ID = resultados_in[["2014"]][["data"]][["IdEstablecimiento"]])
# Iterar sobre cada año para llenar los dataframes
for (year in names(resultados_in)) {
in_vrs_df[[year]] <- resultados_in[[year]][["data"]][["vrs"]]
in_crs_df[[year]] <- resultados_in[[year]][["data"]][["crs"]]
}
out_vrs_df <- data.frame(ID = resultados_out[["2014"]][["data"]][["IdEstablecimiento"]])
# -------------------------------------------- #
# -------------------------------------------- #
# DEA - OUTPUT
resultados_out <- aplicar_analisis_dea(datos, "oo")
# Crear un dataframe para almacenar los valores de VRS y CRS por cada año
in_vrs_df <- data.frame(ID = resultados_in[["2014"]][["data"]][["IdEstablecimiento"]])
in_crs_df <- data.frame(ID = resultados_in[["2014"]][["data"]][["IdEstablecimiento"]])
# Iterar sobre cada año para llenar los dataframes
for (year in names(resultados_in)) {
in_vrs_df[[year]] <- resultados_in[[year]][["data"]][["vrs"]]
in_crs_df[[year]] <- resultados_in[[year]][["data"]][["crs"]]
}
out_vrs_df <- data.frame(ID = resultados_out[["2014"]][["data"]][["IdEstablecimiento"]])
out_crs_df <- data.frame(ID = resultados_out[["2014"]][["data"]][["IdEstablecimiento"]])
# Iterar sobre cada año para llenar los dataframes
for (year in names(resultados_in)) {
out_vrs_df[[year]] <- resultados_out[[year]][["data"]][["vrs"]]
out_crs_df[[year]] <- resultados_out[[year]][["data"]][["crs"]]
}
View(in_vrs_df)
View(malmquist_in_vrs)
correlaciones <- sapply(names(in_vrs_df)[-1], function(year) {
cor(in_vrs_df[[year]], malmquist_in_vrs[[year]], use = "complete.obs")
})
correlaciones
View(out_vrs_df)
View(resultados_in_2_crs)
View(resultados_in)
View(resultados_in[["2014"]][["data"]])
View(resultados_out)
View(resultados_out[["2014"]][["data"]])
