# Enmascarar la diagonal superior
corr_matrix[upper.tri(corr_matrix)] <- NA
format_num <- function(x) {
ifelse(x == 1, "1", format(round(x, 3), nsmall = 3))
}
corrplot(
corr_matrix,
col = colores_personalizados,
method = "color",
mar = c(1, 1, 2, 1),  # Reducir margen superior del gráfico
addCoef.col = "black",  # Color de los coeficientes
number.cex = 1.5,  # Aumenta el tamaño de los números dentro de las celdas
tl.cex = 1.6,  # Aumenta el tamaño de las etiquetas de los ejes (filas y columnas)
cl.cex = 1.4,  # Aumenta el tamaño de la escala de colores
cl.ratio = 0.3,
tl.pos = "d",
cl.align = "r",
tl.col = "black",
number.format = format_num,
na.label = "NA"
)
# Acercar el título al gráfico
mtext(paste("Año", anio), side = 3, line = -1, cex = 1.5, font = 2)
}
# Determinar título según orientación
if (orientacion == "io") {
texto <- "Matrices de correlación de métodos orientado a entradas por año"
} else if (orientacion == "oo") {
texto <- "Matrices de correlación de métodos orientado a salidas por año"
} else {
texto <- "Matrices de correlación de métodos por año"
}
# Reducir espacio entre el título general y los gráficos
mtext(
texto,
outer = TRUE,
cex = 1.5,  # Tamaño del texto
font = 2,   # Estilo en negrita
line = 0.5  # Acercar más el título a los gráficos
)
# Subtítulo centrado y más cerca del título principal
if (subtitulo != "") {
mtext(
subtitulo,
outer = TRUE,
cex = 1.2,
font = 3,
line = -0.5  # Subtítulo aún más cerca
)
}
# Cerrar el dispositivo gráfico
dev.off()
# Restablecer configuración gráfica
par(mfrow = c(1, 1))
}
# Retornar lista de gráficos
return(lista_graficos)
}
correlaciones_eficiencia_grafica_vertical(correlacion_todos_metodos[["correlaciones_lista"]], "todos", c("VRS I", "VRS O", "CRS I", "CRS O","ESC I", "ESC O"),  "", "TODOS")
correlaciones_eficiencia_grafica_vertical <- function(correlaciones_lista, orientacion, etiquetas = c(), subtitulo = "", nombre_archivo) {
colores_personalizados <- colorRampPalette(brewer.pal(9, "RdYlGn"))(200)
colores_con_gris <- c("gray80", colores_personalizados)  # El primer color es para los NA rellenos
breaks <- c(-100, seq(-1, 1, length.out = 201))  # Asegura lugar para -99
num_graficos <- length(correlaciones_lista)
graficos_por_pagina <- 10
paginas <- ceiling(num_graficos / graficos_por_pagina)
lista_graficos <- list()
for (pagina in 1:paginas) {
inicio <- (pagina - 1) * graficos_por_pagina + 1
fin <- min(pagina * graficos_por_pagina, num_graficos)
años_actuales <- names(correlaciones_lista)[inicio:fin]
archivo_salida <- paste0(nombre_archivo, ".png")
png(archivo_salida, width = 4000, height = 7500, res = 300)
par(mfrow = c(5, 2), mar = c(2, 2, 2, 2), oma = c(2, 2, 2, 2))
for (anio in años_actuales) {
corr_matrix <- correlaciones_lista[[anio]]
if (length(etiquetas) != 0) {
rownames(corr_matrix) <- etiquetas
colnames(corr_matrix) <- etiquetas
}
# Enmascarar la diagonal superior
corr_matrix[upper.tri(corr_matrix)] <- NA
# Reemplazar NA reales por -99
corr_matrix[is.na(corr_matrix)] <- -99
format_num <- function(x) {
ifelse(x == -99, "", format(round(x, 3), nsmall = 3))
}
corrplot(
corr_matrix,
col = colores_con_gris,
method = "color",
mar = c(1, 1, 2, 1),
addCoef.col = "black",
number.cex = 1.5,
tl.cex = 1.6,
cl.cex = 1.4,
cl.ratio = 0.3,
cl.align = "r",
tl.pos = "d",
tl.col = "black",
number.format = format_num,
na.label = " ",
is.corr = FALSE,
breaks = breaks
)
mtext(paste("Año", anio), side = 3, line = -1, cex = 1.5, font = 2)
}
texto <- switch(orientacion,
"io" = "Matrices de correlación de métodos orientado a entradas por año",
"oo" = "Matrices de correlación de métodos orientado a salidas por año",
"Matrices de correlación de métodos por año")
mtext(texto, outer = TRUE, cex = 1.5, font = 2, line = 0.5)
if (subtitulo != "") {
mtext(subtitulo, outer = TRUE, cex = 1.2, font = 3, line = -0.5)
}
dev.off()
par(mfrow = c(1, 1))
}
return(lista_graficos)
}
correlaciones_eficiencia_grafica_vertical(correlacion_todos_metodos[["correlaciones_lista"]], "todos", c("VRS I", "VRS O", "CRS I", "CRS O","ESC I", "ESC O"),  "", "TODOS")
correlaciones_eficiencia_grafica_vertical <- function(correlaciones_lista, orientacion, etiquetas = c(), subtitulo = "", nombre_archivo) {
# Definir colores personalizados
colores_personalizados <- colorRampPalette(brewer.pal(9, "RdYlGn"))(200)
# Añadir color gris para los NA (al final de la paleta)
colores_personalizados <- c(colores_personalizados, "gray80")
# Determinar la cantidad de gráficos
num_graficos <- length(correlaciones_lista)
graficos_por_pagina <- 10  # Máximo 10 gráficos por página (2x5)
paginas <- ceiling(num_graficos / graficos_por_pagina)
# Crear lista para almacenar los gráficos
lista_graficos <- list()
# Iterar sobre cada página
for (pagina in 1:paginas) {
# Definir el rango de años a mostrar en la página actual
inicio <- (pagina - 1) * graficos_por_pagina + 1
fin <- min(pagina * graficos_por_pagina, num_graficos)
años_actuales <- names(correlaciones_lista)[inicio:fin]
# Definir el nombre del archivo para guardar la página como imagen
archivo_salida <- paste0(nombre_archivo, "_pagina_", pagina, ".png")
# Abrir un dispositivo gráfico para guardar como imagen
png(archivo_salida, width = 4000, height = 7500, res = 300)
# Ajustar la ventana gráfica
par(mfrow = c(5, 2), mar = c(2, 2, 2, 2), oma = c(2, 2, 2, 2))
# Crear las gráficas para los años actuales
for (anio in años_actuales) {
corr_matrix <- correlaciones_lista[[anio]]
if (length(etiquetas) != 0) {
rownames(corr_matrix) <- etiquetas
colnames(corr_matrix) <- etiquetas
}
# Crear máscara para mostrar solo NAs bajo la diagonal
temp_matrix <- corr_matrix
temp_matrix[upper.tri(temp_matrix)] <- NA  # Ocultar diagonal superior
temp_matrix[!is.na(corr_matrix) & lower.tri(corr_matrix)] <- NA  # Ocultar valores no-NA bajo diagonal
# Combinar: valores reales en diagonal inferior, NAs visibles en gris
plot_matrix <- corr_matrix
plot_matrix[upper.tri(plot_matrix)] <- NA  # Ocultar diagonal superior
# Formatear números
format_num <- function(x) {
ifelse(x == 1, "1", format(round(x, 3), nsmall = 3))
}
# Primero graficar los valores reales
corrplot(
plot_matrix,
col = colores_personalizados[1:200],  # Usar solo los colores originales
method = "color",
mar = c(1, 1, 2, 1),
addCoef.col = "black",
number.cex = 1.5,
tl.cex = 1.6,
cl.cex = 1.4,
cl.ratio = 0.3,
tl.pos = "d",
cl.align = "r",
tl.col = "black",
number.format = format_num,
na.label = "",  # No mostrar etiqueta para NAs todavía
is.corr = TRUE
)
# Luego superponer los NAs en gris
corrplot(
temp_matrix,
method = "color",
col = "gray80",  # Color gris para los NAs
add = TRUE,
na.label = "NA",
na.label.col = "black",
cl.pos = "n",  # No mostrar leyenda de color
tl.pos = "n",  # No mostrar etiquetas otra vez
is.corr = TRUE
)
# Título del gráfico
mtext(paste("Año", anio), side = 3, line = -1, cex = 1.5, font = 2)
}
# Título general
if (orientacion == "io") {
texto <- "Matrices de correlación de métodos orientado a entradas por año"
} else if (orientacion == "oo") {
texto <- "Matrices de correlación de métodos orientado a salidas por año"
} else {
texto <- "Matrices de correlación de métodos por año"
}
mtext(
texto,
outer = TRUE,
cex = 1.5,
font = 2,
line = 0.5
)
# Subtítulo
if (subtitulo != "") {
mtext(
subtitulo,
outer = TRUE,
cex = 1.2,
font = 3,
line = -0.5
)
}
# Cerrar el dispositivo gráfico
dev.off()
# Restablecer configuración gráfica
par(mfrow = c(1, 1))
}
return(lista_graficos)
}
correlaciones_eficiencia_grafica_vertical(correlacion_todos_metodos[["correlaciones_lista"]], "todos", c("VRS I", "VRS O", "CRS I", "CRS O","ESC I", "ESC O"),  "", "TODOS")
correlaciones_eficiencia_grafica_vertical <- function(correlaciones_lista, orientacion, etiquetas = c(), subtitulo = "", nombre_archivo) {
# Definir colores personalizados
colores_personalizados <- colorRampPalette(brewer.pal(9, "RdYlGn"))(200)
# Añadir color gris para los NA (al final de la paleta)
colores_personalizados <- c(colores_personalizados, "gray80")
# Determinar la cantidad de gráficos
num_graficos <- length(correlaciones_lista)
graficos_por_pagina <- 10  # Máximo 10 gráficos por página (2x5)
paginas <- ceiling(num_graficos / graficos_por_pagina)
# Crear lista para almacenar los gráficos
lista_graficos <- list()
# Iterar sobre cada página
for (pagina in 1:paginas) {
# Definir el rango de años a mostrar en la página actual
inicio <- (pagina - 1) * graficos_por_pagina + 1
fin <- min(pagina * graficos_por_pagina, num_graficos)
años_actuales <- names(correlaciones_lista)[inicio:fin]
# Definir el nombre del archivo para guardar la página como imagen
archivo_salida <- paste0(nombre_archivo, "_pagina_", pagina, ".png")
# Abrir un dispositivo gráfico para guardar como imagen
png(archivo_salida, width = 4000, height = 7500, res = 300)
# Ajustar la ventana gráfica
par(mfrow = c(5, 2), mar = c(2, 2, 2, 2), oma = c(2, 2, 2, 2))
# Crear las gráficas para los años actuales
for (anio in años_actuales) {
corr_matrix <- correlaciones_lista[[anio]]
if (length(etiquetas) != 0) {
rownames(corr_matrix) <- etiquetas
colnames(corr_matrix) <- etiquetas
}
# Crear máscara para mostrar solo NAs bajo la diagonal
temp_matrix <- corr_matrix
temp_matrix[upper.tri(temp_matrix)] <- NA  # Ocultar diagonal superior
temp_matrix[!is.na(corr_matrix) & lower.tri(corr_matrix)] <- NA  # Ocultar valores no-NA bajo diagonal
# Combinar: valores reales en diagonal inferior, NAs visibles en gris
plot_matrix <- corr_matrix
plot_matrix[upper.tri(plot_matrix)] <- NA  # Ocultar diagonal superior
# Formatear números
format_num <- function(x) {
ifelse(x == 1, "1", format(round(x, 3), nsmall = 3))
}
# Primero graficar los valores reales
corrplot(
plot_matrix,
col = colores_personalizados[1:200],  # Usar solo los colores originales
method = "color",
mar = c(1, 1, 2, 1),
addCoef.col = "black",
number.cex = 1.5,
tl.cex = 1.6,
cl.cex = 1.4,
cl.ratio = 0.3,
tl.pos = "d",
cl.align = "r",
tl.col = "black",
number.format = format_num,
na.label = "",  # No mostrar etiqueta para NAs todavía
is.corr = TRUE
)
# Luego superponer los NAs en gris
corrplot(
temp_matrix,
method = "color",
col = "gray80",  # Color gris para los NAs
add = TRUE,
na.label = "NA",
na.label.col = "black",
cl.pos = "n",  # No mostrar leyenda de color
tl.pos = "n",  # No mostrar etiquetas otra vez
is.corr = TRUE
)
# Título del gráfico
mtext(paste("Año", anio), side = 3, line = -1, cex = 1.5, font = 2)
}
# Título general
if (orientacion == "io") {
texto <- "Matrices de correlación de métodos orientado a entradas por año"
} else if (orientacion == "oo") {
texto <- "Matrices de correlación de métodos orientado a salidas por año"
} else {
texto <- "Matrices de correlación de métodos por año"
}
mtext(
texto,
outer = TRUE,
cex = 1.5,
font = 2,
line = 0.5
)
# Subtítulo
if (subtitulo != "") {
mtext(
subtitulo,
outer = TRUE,
cex = 1.2,
font = 3,
line = -0.5
)
}
# Cerrar el dispositivo gráfico
dev.off()
# Restablecer configuración gráfica
par(mfrow = c(1, 1))
}
return(lista_graficos)
}
correlaciones_eficiencia_grafica_vertical(correlacion_todos_metodos[["correlaciones_lista"]], "todos", c("VRS I", "VRS O", "CRS I", "CRS O","ESC I", "ESC O"),  "", "TODOS")
correlaciones_eficiencia_grafica_vertical <- function(correlaciones_lista, orientacion, etiquetas = c(), subtitulo = "", nombre_archivo) {
# Definir colores personalizados
#browser()
colores_personalizados <- colorRampPalette(brewer.pal(9, "RdYlGn"))(200)
# Determinar la cantidad de gráficos
num_graficos <- length(correlaciones_lista)
graficos_por_pagina <- 10  # Máximo 10 gráficos por página (2x5)
paginas <- ceiling(num_graficos / graficos_por_pagina)
# Crear lista para almacenar los gráficos
lista_graficos <- list()
# Iterar sobre cada página
for (pagina in 1:paginas) {
# Definir el rango de años a mostrar en la página actual
inicio <- (pagina - 1) * graficos_por_pagina + 1
fin <- min(pagina * graficos_por_pagina, num_graficos)
años_actuales <- names(correlaciones_lista)[inicio:fin]
# Definir el nombre del archivo para guardar la página como imagen
archivo_salida <- paste0(nombre_archivo, ".png")
# Abrir un dispositivo gráfico para guardar como imagen
png(archivo_salida, width = 4000, height = 7500, res = 300)  # Más ancho y achatado
# Ajustar la ventana gráfica para 2x5 con márgenes reducidos
#par(mfrow = c(2, 5), mar = c(1, 1, 2, 1), oma = c(2, 2, 2, 2))
par(mfrow = c(5, 2), mar = c(2, 2, 2, 2), oma = c(2, 2, 2, 2))
# Crear las gráficas para los años actuales
for (anio in años_actuales) {
corr_matrix <- correlaciones_lista[[anio]]
if (length(etiquetas) != 0) {
rownames(corr_matrix) <- etiquetas
colnames(corr_matrix) <- etiquetas
}
# Enmascarar la diagonal superior
corr_matrix[upper.tri(corr_matrix)] <- NA
format_num <- function(x) {
ifelse(x == 1, "1", format(round(x, 3), nsmall = 3))
}
corrplot(
corr_matrix,
col = colores_personalizados,
method = "color",
mar = c(1, 1, 2, 1),  # Reducir margen superior del gráfico
addCoef.col = "black",  # Color de los coeficientes
number.cex = 1.5,  # Aumenta el tamaño de los números dentro de las celdas
tl.cex = 1.6,  # Aumenta el tamaño de las etiquetas de los ejes (filas y columnas)
cl.cex = 1.4,  # Aumenta el tamaño de la escala de colores
cl.ratio = 0.3,
tl.pos = "d",
cl.align = "r",
tl.col = "black",
number.format = format_num,
na.label = "NA"
)
# Acercar el título al gráfico
mtext(paste("Año", anio), side = 3, line = -1, cex = 1.5, font = 2)
}
# Determinar título según orientación
if (orientacion == "io") {
texto <- "Matrices de correlación de métodos orientado a entradas por año"
} else if (orientacion == "oo") {
texto <- "Matrices de correlación de métodos orientado a salidas por año"
} else {
texto <- "Matrices de correlación de métodos por año"
}
# Reducir espacio entre el título general y los gráficos
mtext(
texto,
outer = TRUE,
cex = 1.5,  # Tamaño del texto
font = 2,   # Estilo en negrita
line = 0.5  # Acercar más el título a los gráficos
)
# Subtítulo centrado y más cerca del título principal
if (subtitulo != "") {
mtext(
subtitulo,
outer = TRUE,
cex = 1.2,
font = 3,
line = -0.5  # Subtítulo aún más cerca
)
}
# Cerrar el dispositivo gráfico
dev.off()
# Restablecer configuración gráfica
par(mfrow = c(1, 1))
}
# Retornar lista de gráficos
return(lista_graficos)
}
correlaciones_eficiencia_grafica_vertical(correlacion_todos_metodos[["correlaciones_lista"]], "todos", c("VRS I", "VRS O", "CRS I", "CRS O","ESC I", "ESC O"),  "", "TODOS")
correlaciones_eficiencia_grafica_vertical <- function(correlaciones_lista, orientacion, etiquetas = c(), subtitulo = "", nombre_archivo) {
# Definir colores personalizados
#browser()
colores_personalizados <- colorRampPalette(brewer.pal(9, "RdYlGn"))(200)
# Determinar la cantidad de gráficos
num_graficos <- length(correlaciones_lista)
graficos_por_pagina <- 10  # Máximo 10 gráficos por página (2x5)
paginas <- ceiling(num_graficos / graficos_por_pagina)
# Crear lista para almacenar los gráficos
lista_graficos <- list()
# Iterar sobre cada página
for (pagina in 1:paginas) {
# Definir el rango de años a mostrar en la página actual
inicio <- (pagina - 1) * graficos_por_pagina + 1
fin <- min(pagina * graficos_por_pagina, num_graficos)
años_actuales <- names(correlaciones_lista)[inicio:fin]
# Definir el nombre del archivo para guardar la página como imagen
archivo_salida <- paste0(nombre_archivo, ".png")
# Abrir un dispositivo gráfico para guardar como imagen
png(archivo_salida, width = 4000, height = 7500, res = 300)  # Más ancho y achatado
# Ajustar la ventana gráfica para 2x5 con márgenes reducidos
#par(mfrow = c(2, 5), mar = c(1, 1, 2, 1), oma = c(2, 2, 2, 2))
par(mfrow = c(5, 2), mar = c(2, 2, 2, 2), oma = c(2, 2, 2, 2))
# Crear las gráficas para los años actuales
for (anio in años_actuales) {
corr_matrix <- correlaciones_lista[[anio]]
if (length(etiquetas) != 0) {
rownames(corr_matrix) <- etiquetas
colnames(corr_matrix) <- etiquetas
}
# Enmascarar la diagonal superior
corr_matrix[upper.tri(corr_matrix)] <- NA
format_num <- function(x) {
ifelse(x == 1, "1", format(round(x, 3), nsmall = 3))
}
corrplot(
corr_matrix,
col = colores_personalizados,
method = "color",
mar = c(1, 1, 2, 1),  # Reducir margen superior del gráfico
addCoef.col = "black",  # Color de los coeficientes
number.cex = 1.5,  # Aumenta el tamaño de los números dentro de las celdas
tl.cex = 1.6,  # Aumenta el tamaño de las etiquetas de los ejes (filas y columnas)
cl.cex = 1.4,  # Aumenta el tamaño de la escala de colores
cl.ratio = 0.3,
tl.pos = "d",
cl.align = "r",
tl.col = "black",
number.format = format_num,
na.label = " "
)
# Acercar el título al gráfico
mtext(paste("Año", anio), side = 3, line = -1, cex = 1.5, font = 2)
}
# Determinar título según orientación
if (orientacion == "io") {
texto <- "Matrices de correlación de métodos orientado a entradas por año"
} else if (orientacion == "oo") {
texto <- "Matrices de correlación de métodos orientado a salidas por año"
} else {
texto <- "Matrices de correlación de métodos por año"
}
# Reducir espacio entre el título general y los gráficos
mtext(
texto,
outer = TRUE,
cex = 1.5,  # Tamaño del texto
font = 2,   # Estilo en negrita
line = 0.5  # Acercar más el título a los gráficos
)
# Subtítulo centrado y más cerca del título principal
if (subtitulo != "") {
mtext(
subtitulo,
outer = TRUE,
cex = 1.2,
font = 3,
line = -0.5  # Subtítulo aún más cerca
)
}
# Cerrar el dispositivo gráfico
dev.off()
# Restablecer configuración gráfica
par(mfrow = c(1, 1))
}
# Retornar lista de gráficos
return(lista_graficos)
}
