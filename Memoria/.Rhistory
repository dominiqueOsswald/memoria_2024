library(readxl)
library(dplyr)
library(Benchmarking)
library(corrplot)
library(purrr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("functions.R")
source("graphics2.R")
# ----------------------------------------------- #
# Periodo previo a pandemia #
data_2014 <- consolidar_datos_por_anio(2014)
View(data_2014)
anio <- 2014
path_hospitales <- paste0("data/", anio, "/", anio, "_hospitals.csv")
hospitales <- read.csv(path_hospitales) %>% rename("IdEstablecimiento" = "hospital_id")
View(hospitales)
# Establecer directorio de trabajo
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
anio <- 2014
# Definir rutas de archivos utilizando el año como variable
path_hospitales <- paste0("data/", anio, "/", anio, "_hospitals.csv")
print("-")
path_predicciones_grd <- paste0("data/", anio, "/", anio, "_prediciones_grd.txt")
print("-")
path_datos_consolidados <- paste0("data/", anio, "/", anio, "_consolidated_data.csv")
print("-")
path_financiero <- paste0("data/", anio, "/", anio, "_financial_data.csv")
print("-")
path_estadisticas <- "data/Consolidado estadísticas hospitalarias 2014-2021.xlsx"
print("1")
# Cargar datos
hospitales <- read.csv(path_hospitales) %>% rename("IdEstablecimiento" = "hospital_id")
predicciones_grd <- read.csv(path_predicciones_grd, sep=",")
datos_consolidados <- read.table(path_datos_consolidados, sep=";", header=TRUE)
financiero <- read.csv(path_financiero) %>%
select(hospital_id, X21_value, X22_value) %>% rename("IdEstablecimiento" = "hospital_id")
View(financiero)
financiero$X21_value <- as.numeric(financiero$X21_value)
financiero$X22_value <- as.numeric(financiero$X22_value)
print("2")
estadisticas <- read_excel(path_estadisticas, sheet = 6, skip = 2)  %>%
rename("IdEstablecimiento" = "Cód. Estab.", "Region" = "Nombre SS/SEREMI") %>%
filter(`Nombre Nivel Cuidado` == "Datos Establecimiento") %>%
select(-"Cód. Nivel Cuidado", -"Cód. SS/SEREMI", -"Nombre Nivel Cuidado") %>%
semi_join(predicciones_grd, by = "IdEstablecimiento") %>%
select(1:5)
View(estadisticas)
# ----------------------------------------------- #
# Periodo previo a pandemia #
data_2014 <- consolidar_datos_por_anio(2014)
View(data_2014)
data_2015 <- consolidar_datos_por_anio(2015)
View(data_2015)
# ----------------------------------------------- #
# Periodo previo a pandemia #
data_2014 <- consolidar_datos_por_anio(2014)
path_datos_consolidados <- paste0("data/", anio, "/", anio, "_consolidated_data.csv")
path_estadisticas <- "data/Consolidado estadísticas hospitalarias 2014-2021.xlsx"
# Cargar datos
hospitales <- read.csv(path_hospitales) %>% rename("IdEstablecimiento" = "hospital_id")
predicciones_grd <- read.csv(path_predicciones_grd, sep=",")
datos_consolidados <- read.table(path_datos_consolidados, sep=";", header=TRUE)
financiero <- read.csv(path_financiero) %>%
select(hospital_id, X21_value, X22_value) %>% rename("IdEstablecimiento" = "hospital_id")
financiero$X21_value <- as.numeric(financiero$X21_value)
financiero$X22_value <- as.numeric(financiero$X22_value)
print("2")
estadisticas <- read_excel(path_estadisticas, sheet = 6, skip = 2)  %>%
rename("IdEstablecimiento" = "Cód. Estab.", "Region" = "Nombre SS/SEREMI") %>%
filter(`Nombre Nivel Cuidado` == "Datos Establecimiento") %>%
select(-"Cód. Nivel Cuidado", -"Cód. SS/SEREMI", -"Nombre Nivel Cuidado") %>%
semi_join(predicciones_grd, by = "IdEstablecimiento") %>%
select(1:5)
View(estadisticas)
View(hospitales)
View(predicciones_grd)
View(datos_consolidados)
View(estadisticas)
consolidar_datos_por_anio <- function(anio) {
# Establecer directorio de trabajo
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
anio <- 2014
# Definir rutas de archivos utilizando el año como variable
path_hospitales <- paste0("data/", anio, "/", anio, "_hospitals.csv")
print("-")
path_predicciones_grd <- paste0("data/", anio, "/", anio, "_prediciones_grd.txt")
print("-")
path_datos_consolidados <- paste0("data/", anio, "/", anio, "_consolidated_data.csv")
print("-")
path_financiero <- paste0("data/", anio, "/", anio, "_financial_data.csv")
print("-")
path_estadisticas <- "data/Consolidado estadísticas hospitalarias 2014-2021.xlsx"
print("1")
# Cargar datos
hospitales <- read.csv(path_hospitales) %>% rename("IdEstablecimiento" = "hospital_id")
predicciones_grd <- read.csv(path_predicciones_grd, sep=",")
datos_consolidados <- read.table(path_datos_consolidados, sep=";", header=TRUE)
financiero <- read.csv(path_financiero) %>%
select(hospital_id, X21_value, X22_value) %>% rename("IdEstablecimiento" = "hospital_id")
financiero$X21_value <- as.numeric(financiero$X21_value)
financiero$X22_value <- as.numeric(financiero$X22_value)
print("2")
estadisticas <- read_excel(path_estadisticas, sheet = (anio - 2014) + 1, skip = 2)  %>%
rename("IdEstablecimiento" = "Cód. Estab.", "Region" = "Nombre SS/SEREMI") %>%
filter(`Nombre Nivel Cuidado` == "Datos Establecimiento") %>%
select(-"Cód. Nivel Cuidado", -"Cód. SS/SEREMI", -"Nombre Nivel Cuidado") %>%
semi_join(predicciones_grd, by = "IdEstablecimiento") %>%
select(1:5)
print("3")
# Procesar estadísticas
dias_cama_disponibles <- estadisticas %>%
filter(Glosa == "Dias Cama Disponibles") %>%
select(1:5) %>% rename("dias_cama_disponible" = "Acum") %>% select(-Glosa)
egresos <- estadisticas %>%
filter(Glosa == "Numero de Egresos") %>%
select(1:5) %>% rename("egresos" = "Acum") %>% select(-Glosa)
print("4")
# Definir consultas
consultas <- list("idEstablecimiento", "X07020130", "X07020230", "X07020330", "X07020331",
"X07020332", "X07024219", "X07020500", "X07020501", "X07020600",
"X07020601", "X07020700", "X07020800", "X07020801", "X07020900",
"X07020901", "X07021000", "X07021001", "X07021100", "X07021101",
"X07021230", "X07021300", "X07021301", "X07022000", "X07022001",
"X07021531", "X07022132", "X07022133", "X07022134", "X07021700",
"X07021800", "X07021801", "X07021900", "X07022130", "X07022142",
"X07022143", "X07022144", "X07022135", "X07022136", "X07022137",
"X07022700", "X07022800", "X07022900", "X07021701", "X07023100",
"X07023200", "X07023201", "X07023202", "X07023203", "X07023700",
"X07023701", "X07023702", "X07023703", "X07024000", "X07024001",
"X07024200", "X07030500", "X07024201", "X07024202", "X07030501",
"X07030502")
print("5")
# Seleccionar y convertir columnas válidas
columnas_validas <- intersect(unlist(consultas), colnames(datos_consolidados))
print("5")
str(columnas_validas)
str(datos_consolidados)
consultas_data <- subset(datos_consolidados, select = columnas_validas)
print("5")
# Identificar columnas tipo character
cols_char <- sapply(consultas_data, is.character)
# Convertir columnas character a numeric
consultas_data[, cols_char] <- lapply(consultas_data[, cols_char], function(x) as.numeric(x))
print("6")
# Crear suma total de consultas
consultas_data$sumaTotal <- rowSums(consultas_data[, -which(names(consultas_data) == "idEstablecimiento")], na.rm = TRUE)
consultas <- data.frame(idEstablecimiento = consultas_data$idEstablecimiento,
Consultas = consultas_data$sumaTotal) %>%
rename("IdEstablecimiento" = "idEstablecimiento") %>%
inner_join(predicciones_grd, by = "IdEstablecimiento") %>%
select(IdEstablecimiento, Consultas)
print("7")
# Definir quirofano
quirofano <- list("idEstablecimiento", "X21220100", "X21220200", "X21220700", "X21220600")
quirofano_data <- subset(datos_consolidados, select = unlist(quirofano))
# Reemplazar comas por puntos y convertir a numérico
quirofano_data <- quirofano_data %>%
mutate(across(-idEstablecimiento, ~ as.numeric(gsub(",", ".", .))))
print("8")
# Crear suma total de quirofano
quirofano_data$sumaTotal <- rowSums(select(quirofano_data, -idEstablecimiento), na.rm = TRUE)
quirofano <- data.frame(idEstablecimiento = quirofano_data$idEstablecimiento,
Quirofano = quirofano_data$sumaTotal) %>%
rename("IdEstablecimiento" = "idEstablecimiento") %>%
inner_join(predicciones_grd, by = "IdEstablecimiento") %>%
select(IdEstablecimiento, Quirofano)
print("9")
# Procesar egresos y predicciones GRD
intermediate_df <- egresos %>%
inner_join(predicciones_grd, by = "IdEstablecimiento") %>%
mutate(Egresos.GRD = Prediction * egresos) %>%
select("Region", IdEstablecimiento, "Nombre Establecimiento", Egresos.GRD)
# Combinar datos financieros y días cama disponibles
input <- left_join(financiero, dias_cama_disponibles %>%
select(IdEstablecimiento, dias_cama_disponible), by = "IdEstablecimiento")
print("10")
# Combinar todas las salidas
output <- intermediate_df %>%
left_join(consultas, by = "IdEstablecimiento") %>%
left_join(quirofano, by = "IdEstablecimiento")
# Consolidar todos los datos
all <- inner_join(output, input, by = "IdEstablecimiento") %>%
left_join(hospitales %>% select(IdEstablecimiento, region_id, latitud, longitud), by = "IdEstablecimiento") %>%
relocate(region_id, .after = Region)
return(all)
}
# ----------------------------------------------- #
# Periodo previo a pandemia #
data_2014 <- consolidar_datos_por_anio(2014)
View(data_2014)
library(readxl)
library(dplyr)
library(Benchmarking)
library(corrplot)
library(purrr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("functions.R")
source("graphics2.R")
library(readxl)
library(dplyr)
library(Benchmarking)
library(corrplot)
library(purrr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("functions.R")
source("graphics2.R")
# ----------------------------------------------- #
# Periodo previo a pandemia #
data_2014 <- consolidar_datos_por_anio(2014)
View(data_2014)
resultados_2014_in <- analisis_dea_in(data_2014)
data_2015 <- consolidar_datos_por_anio(2015)
resultados_2015_in <- analisis_dea_in(data_2015)
data_2016 <- consolidar_datos_por_anio(2016)
resultados_2016_in <- analisis_dea_in(data_2016)
data_2017 <- consolidar_datos_por_anio(2017)
resultados_2017_in <- analisis_dea_in(data_2017)
data_2018 <- consolidar_datos_por_anio(2018)
resultados_2018_in <- analisis_dea_in(data_2018)
data_2019 <- consolidar_datos_por_anio(2019)
resultados_2019_in <- analisis_dea_in(data_2019)
region <- region_vrs(resultados_2014_in, 13)
print(region)
region <- region_vrs(resultados_2015_in, 13)
print(region)
region <- region_vrs(resultados_2016_in, 13)
print(region)
region <- region_vrs(resultados_2017_in, 13)
print(region)
region <- region_vrs(resultados_2019_in, 13)
print(region)
# ----------------------------------------------- #
# Periodo previo a pandemia #
data_2014 <- consolidar_datos_por_anio(2014)
resultados_2014_in <- analisis_dea_in(data_2014)
region <- region_vrs(resultados_2014_in, 13)
print(region)
# ----------------------------------------------- #
# Periodo previo a pandemia #
data_2014 <- consolidar_datos_por_anio(2014)
resultados_2014_in <- analisis_dea_in(data_2014)
region <- region_vrs(resultados_2014_in, 13)
print(region)
# ----------------------------------------------- #
# Periodo previo a pandemia #
data_2014 <- consolidar_datos_por_anio(2014)
resultados_2014_in <- analisis_dea_in(data_2014)
region <- region_vrs(resultados_2014_in, 13)
print(region)
# ----------------------------------------------- #
# Periodo previo a pandemia #
data_2014 <- consolidar_datos_por_anio(2014)
resultados_2014_in <- analisis_dea_in(data_2014)
region <- region_vrs(resultados_2014_in, 13)
print(region)
mapa_interactivo <- ggplotly(region, tooltip = "text")
print(mapa_interactivo)
