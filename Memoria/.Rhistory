#iteracion_1_crs = iteracion_1_crs,
#iteracion_2_crs = iteracion_2_crs,
resultados_combinados = resultados_combinados,
resultados_correlacion = resultados_correlacion,
lista_outliers_vrs = lista_outliers,
vector_outliers_vrs = vector_outliers,
lista_outliers_crs = lista_outliers,
vector_outliers_crs = vector_outliers
)
}
resultados_in <- resultados_iteracion(datos, "io")
resultados_iteracion <- function(datos, orientacion){
original <-  aplicar_analisis_dea(datos, orientacion)
iteracion_1_vrs <- aplicar_sensibilidad(datos, lapply(original, `[[`, "data"), 0.99, orientacion, "vrs", FALSE)
iteracion_2_vrs <- aplicar_sensibilidad(datos, lapply(iteracion_1_vrs, `[[`, "data"), 0.99, orientacion, "vrs", FALSE)
iteracion_1_crs <- aplicar_sensibilidad(datos, lapply(original, `[[`, "data"), 0.99, orientacion, "crs", FALSE)
iteracion_2_crs <- aplicar_sensibilidad(datos, lapply(iteracion_1_crs, `[[`, "data"), 0.99, orientacion, "crs", FALSE)
resultados_combinados <- combinar_resultados_iteraciones(original, iteracion_1_vrs, iteracion_2_vrs, iteracion_1_crs, iteracion_2_crs)
resultados_correlacion <- calcular_y_graficar_correlaciones(resultados_combinados, anios)
# Crear una lista vacía para almacenar los valores atípicos por año
lista_outliers_vrs <- list()
# Crear un vector vacío para almacenar todos los valores atípicos sin duplicados
vector_outliers_vrs <- c()
lista_outliers_crs <- list()
# Crear un vector vacío para almacenar todos los valores atípicos sin duplicados
vector_outliers_crs <- c()
# Especificar los años que quieres iterar
anios <- c("2014", "2015", "2016", "2017", "2018", "2019", "2020")
# Iterar sobre cada año
for (anio in anios) {
# Generar el boxplot para la columna "vrs" del año actual
box_vrs <- boxplot(original[[anio]][["data"]]$vrs,
main = paste("Boxplot de VRS - Año", anio),
ylab = "VRS",
col = "lightgray")
# Obtener los valores atípicos en la columna "vrs" del año actual
outliers_vrs <- boxplot.stats(original[[anio]][["data"]]$vrs)$out
points(rep(1, length(outliers_vrs)), outliers_vrs, col = "red", pch = 16)
# Filtrar el dataframe para obtener los IDs de los valores atípicos
ids_outliers_vrs <- original[[anio]][["data"]] %>%
filter(vrs %in% outliers_vrs) %>%
select(IdEstablecimiento, vrs)
# Añadir los valores atípicos del año actual a la lista, con el nombre del año
lista_outliers_vrs[[anio]] <- ids_outliers_vrs
# Añadir los IDs al vector de valores atípicos, asegurando que no se repitan
vector_outliers_vrs <- unique(c(vector_outliers_vrs, ids_outliers_vrs$IdEstablecimiento))
# Generar el boxplot para la columna "vrs" del año actual
box_crs <- boxplot(original[[anio]][["data"]]$crs,
main = paste("Boxplot de VRS - Año", anio),
ylab = "VRS",
col = "lightgray")
# Obtener los valores atípicos en la columna "vrs" del año actual
outliers_crs <- boxplot.stats(original[[anio]][["data"]]$crs)$out
points(rep(1, length(outliers_crs)), outliers_crs, col = "red", pch = 16)
# Filtrar el dataframe para obtener los IDs de los valores atípicos
ids_outliers_crs <- original[[anio]][["data"]] %>%
filter(crs %in% outliers_crs) %>%
select(IdEstablecimiento, crs)
# Añadir los valores atípicos del año actual a la lista, con el nombre del año
lista_outliers_crs[[anio]] <- ids_outliers_crs
# Añadir los IDs al vector de valores atípicos, asegurando que no se repitan
vector_outliers_crs <- unique(c(vector_outliers_crs, ids_outliers_crs$IdEstablecimiento))
}
list(
original =  original,
#iteracion_1_vrs = iteracion_1_vrs,
#iteracion_2_vrs = iteracion_2_vrs,
#iteracion_1_crs = iteracion_1_crs,
#iteracion_2_crs = iteracion_2_crs,
resultados_combinados = resultados_combinados,
resultados_correlacion = resultados_correlacion,
lista_outliers_vrs = lista_outliers_vrs,
vector_outliers_vrs = vector_outliers_vrs,
lista_outliers_crs = lista_outliers_crs,
vector_outliers_crs = vector_outliers_crs
)
}
resultados_in <- resultados_iteracion(datos, "io")
View(resultados_in)
# Iterar sobre cada año
for (anio in anios) {
# Generar el boxplot para la columna "vrs" del año actual
box_vrs <- boxplot(original[[anio]][["data"]]$vrs,
main = paste("Boxplot de VRS - Año", anio),
ylab = "VRS",
col = "lightgray")
# Obtener los valores atípicos en la columna "vrs" del año actual
outliers_vrs <- boxplot.stats(original[[anio]][["data"]]$vrs)$out
box_vrs <- box_vrs + points(rep(1, length(outliers_vrs)), outliers_vrs, col = "red", pch = 16)
# Filtrar el dataframe para obtener los IDs de los valores atípicos
ids_outliers_vrs <- original[[anio]][["data"]] %>%
filter(vrs %in% outliers_vrs) %>%
select(IdEstablecimiento, vrs)
# Añadir los valores atípicos del año actual a la lista, con el nombre del año
lista_outliers_vrs[[anio]] <- ids_outliers_vrs
# Añadir los IDs al vector de valores atípicos, asegurando que no se repitan
vector_outliers_vrs <- unique(c(vector_outliers_vrs, ids_outliers_vrs$IdEstablecimiento))
# Generar el boxplot para la columna "vrs" del año actual
box_crs <- boxplot(original[[anio]][["data"]]$crs,
main = paste("Boxplot de VRS - Año", anio),
ylab = "VRS",
col = "lightgray")
# Obtener los valores atípicos en la columna "vrs" del año actual
outliers_crs <- boxplot.stats(original[[anio]][["data"]]$crs)$out
box_crs <- box_crs + points(rep(1, length(outliers_crs)), outliers_crs, col = "red", pch = 16)
# Filtrar el dataframe para obtener los IDs de los valores atípicos
ids_outliers_crs <- original[[anio]][["data"]] %>%
filter(crs %in% outliers_crs) %>%
select(IdEstablecimiento, crs)
# Añadir los valores atípicos del año actual a la lista, con el nombre del año
lista_outliers_crs[[anio]] <- ids_outliers_crs
# Añadir los IDs al vector de valores atípicos, asegurando que no se repitan
vector_outliers_crs <- unique(c(vector_outliers_crs, ids_outliers_crs$IdEstablecimiento))
}
resultados_iteracion <- function(datos, orientacion){
original <-  aplicar_analisis_dea(datos, orientacion)
iteracion_1_vrs <- aplicar_sensibilidad(datos, lapply(original, `[[`, "data"), 0.99, orientacion, "vrs", FALSE)
iteracion_2_vrs <- aplicar_sensibilidad(datos, lapply(iteracion_1_vrs, `[[`, "data"), 0.99, orientacion, "vrs", FALSE)
iteracion_1_crs <- aplicar_sensibilidad(datos, lapply(original, `[[`, "data"), 0.99, orientacion, "crs", FALSE)
iteracion_2_crs <- aplicar_sensibilidad(datos, lapply(iteracion_1_crs, `[[`, "data"), 0.99, orientacion, "crs", FALSE)
resultados_combinados <- combinar_resultados_iteraciones(original, iteracion_1_vrs, iteracion_2_vrs, iteracion_1_crs, iteracion_2_crs)
resultados_correlacion <- calcular_y_graficar_correlaciones(resultados_combinados, anios)
# Crear una lista vacía para almacenar los valores atípicos por año
lista_outliers_vrs <- list()
# Crear un vector vacío para almacenar todos los valores atípicos sin duplicados
vector_outliers_vrs <- c()
lista_outliers_crs <- list()
# Crear un vector vacío para almacenar todos los valores atípicos sin duplicados
vector_outliers_crs <- c()
# Especificar los años que quieres iterar
anios <- c("2014", "2015", "2016", "2017", "2018", "2019", "2020")
# Iterar sobre cada año
for (anio in anios) {
# Generar el boxplot para la columna "vrs" del año actual
box_vrs <- boxplot(original[[anio]][["data"]]$vrs,
main = paste("Boxplot de VRS - Año", anio),
ylab = "VRS",
col = "lightgray")
# Obtener los valores atípicos en la columna "vrs" del año actual
outliers_vrs <- boxplot.stats(original[[anio]][["data"]]$vrs)$out
box_vrs <- box_vrs + points(rep(1, length(outliers_vrs)), outliers_vrs, col = "red", pch = 16)
# Filtrar el dataframe para obtener los IDs de los valores atípicos
ids_outliers_vrs <- original[[anio]][["data"]] %>%
filter(vrs %in% outliers_vrs) %>%
select(IdEstablecimiento, vrs)
# Añadir los valores atípicos del año actual a la lista, con el nombre del año
lista_outliers_vrs[[anio]] <- ids_outliers_vrs
# Añadir los IDs al vector de valores atípicos, asegurando que no se repitan
vector_outliers_vrs <- unique(c(vector_outliers_vrs, ids_outliers_vrs$IdEstablecimiento))
# Generar el boxplot para la columna "vrs" del año actual
box_crs <- boxplot(original[[anio]][["data"]]$crs,
main = paste("Boxplot de VRS - Año", anio),
ylab = "VRS",
col = "lightgray")
# Obtener los valores atípicos en la columna "vrs" del año actual
outliers_crs <- boxplot.stats(original[[anio]][["data"]]$crs)$out
box_crs <- box_crs + points(rep(1, length(outliers_crs)), outliers_crs, col = "red", pch = 16)
# Filtrar el dataframe para obtener los IDs de los valores atípicos
ids_outliers_crs <- original[[anio]][["data"]] %>%
filter(crs %in% outliers_crs) %>%
select(IdEstablecimiento, crs)
# Añadir los valores atípicos del año actual a la lista, con el nombre del año
lista_outliers_crs[[anio]] <- ids_outliers_crs
# Añadir los IDs al vector de valores atípicos, asegurando que no se repitan
vector_outliers_crs <- unique(c(vector_outliers_crs, ids_outliers_crs$IdEstablecimiento))
}
list(
original =  original,
#iteracion_1_vrs = iteracion_1_vrs,
#iteracion_2_vrs = iteracion_2_vrs,
#iteracion_1_crs = iteracion_1_crs,
#iteracion_2_crs = iteracion_2_crs,
resultados_combinados = resultados_combinados,
resultados_correlacion = resultados_correlacion,
lista_outliers_vrs = lista_outliers_vrs,
vector_outliers_vrs = vector_outliers_vrs,
lista_outliers_crs = lista_outliers_crs,
vector_outliers_crs = vector_outliers_crs
)
}
resultados_in <- resultados_iteracion(datos, "io")
resultados_in_cut_vrs <- resultados_iteracion(datos_cut_vrs, "io")
datos_cut_vrs <- lapply(datos, function(df) {
df %>% filter(!(IdEstablecimiento %in% resultados_in[["vector_outliers_vrs"]]))
})
datos_cut_crs <- lapply(datos, function(df) {
df %>% filter(!(IdEstablecimiento %in% resultados_in[["vector_outliers_crs"]]))
})
View(datos_cut_crs)
View(datos_cut_vrs)
resultados_in_cut_vrs <- resultados_iteracion(datos_cut_vrs, "io")
resultados_in_cut_crs <- resultados_iteracion(datos_cut_crs, "io")
datos_cut_vrs_2 <- lapply(datos, function(df) {
df %>% filter(!(IdEstablecimiento %in% resultados_in_cut_vrs[["vector_outliers_vrs"]]))
})
resultados_in_cut_vrs <- resultados_iteracion(datos_cut_vrs, "io")
resultados_iteracion <- function(datos, orientacion){
original <-  aplicar_analisis_dea(datos, orientacion)
iteracion_1_vrs <- aplicar_sensibilidad(datos, lapply(original, `[[`, "data"), 0.99, orientacion, "vrs", FALSE)
iteracion_2_vrs <- aplicar_sensibilidad(datos, lapply(iteracion_1_vrs, `[[`, "data"), 0.99, orientacion, "vrs", FALSE)
iteracion_1_crs <- aplicar_sensibilidad(datos, lapply(original, `[[`, "data"), 0.99, orientacion, "crs", FALSE)
iteracion_2_crs <- aplicar_sensibilidad(datos, lapply(iteracion_1_crs, `[[`, "data"), 0.99, orientacion, "crs", FALSE)
resultados_combinados <- combinar_resultados_iteraciones(original, iteracion_1_vrs, iteracion_2_vrs, iteracion_1_crs, iteracion_2_crs)
resultados_correlacion <- calcular_y_graficar_correlaciones(resultados_combinados, anios)
# Crear una lista vacía para almacenar los valores atípicos por año
lista_outliers_vrs <- list()
# Crear un vector vacío para almacenar todos los valores atípicos sin duplicados
vector_outliers_vrs <- c()
lista_outliers_crs <- list()
# Crear un vector vacío para almacenar todos los valores atípicos sin duplicados
vector_outliers_crs <- c()
# Especificar los años que quieres iterar
anios <- c("2014", "2015", "2016", "2017", "2018", "2019", "2020")
# Iterar sobre cada año
for (anio in anios) {
# Generar el boxplot para la columna "vrs" del año actual
boxplot(original[[anio]][["data"]]$vrs,
main = paste("Boxplot de VRS - Año", anio),
ylab = "VRS",
col = "lightgray")
# Obtener los valores atípicos en la columna "vrs" del año actual
outliers_vrs <- boxplot.stats(original[[anio]][["data"]]$vrs)$out
points(rep(1, length(outliers_vrs)), outliers_vrs, col = "red", pch = 16)
# Filtrar el dataframe para obtener los IDs de los valores atípicos
ids_outliers_vrs <- original[[anio]][["data"]] %>%
filter(vrs %in% outliers_vrs) %>%
select(IdEstablecimiento, vrs)
# Añadir los valores atípicos del año actual a la lista, con el nombre del año
lista_outliers_vrs[[anio]] <- ids_outliers_vrs
# Añadir los IDs al vector de valores atípicos, asegurando que no se repitan
vector_outliers_vrs <- unique(c(vector_outliers_vrs, ids_outliers_vrs$IdEstablecimiento))
# Generar el boxplot para la columna "vrs" del año actual
boxplot(original[[anio]][["data"]]$crs,
main = paste("Boxplot de VRS - Año", anio),
ylab = "VRS",
col = "lightgray")
# Obtener los valores atípicos en la columna "vrs" del año actual
outliers_crs <- boxplot.stats(original[[anio]][["data"]]$crs)$out
points(rep(1, length(outliers_crs)), outliers_crs, col = "red", pch = 16)
# Filtrar el dataframe para obtener los IDs de los valores atípicos
ids_outliers_crs <- original[[anio]][["data"]] %>%
filter(crs %in% outliers_crs) %>%
select(IdEstablecimiento, crs)
# Añadir los valores atípicos del año actual a la lista, con el nombre del año
lista_outliers_crs[[anio]] <- ids_outliers_crs
# Añadir los IDs al vector de valores atípicos, asegurando que no se repitan
vector_outliers_crs <- unique(c(vector_outliers_crs, ids_outliers_crs$IdEstablecimiento))
}
list(
original =  original,
#iteracion_1_vrs = iteracion_1_vrs,
#iteracion_2_vrs = iteracion_2_vrs,
#iteracion_1_crs = iteracion_1_crs,
#iteracion_2_crs = iteracion_2_crs,
resultados_combinados = resultados_combinados,
resultados_correlacion = resultados_correlacion,
lista_outliers_vrs = lista_outliers_vrs,
vector_outliers_vrs = vector_outliers_vrs,
lista_outliers_crs = lista_outliers_crs,
vector_outliers_crs = vector_outliers_crs
)
}
resultados_in_cut_vrs <- resultados_iteracion(datos_cut_vrs, "io")
resultados_in_cut_crs <- resultados_iteracion(datos_cut_crs, "io")
View(resultados_in)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("functions.R")
source("graphics.R")
# ----------------------------------------------- #
# -------------------------------------------- #
#  CÁLCULO DEA INPUT
# -------------------------------------------- #
anios <- c("2014", "2015", "2016", "2017", "2018", "2019","2020")
datos_iniciales <- list(
"2014" = consolidar_datos_por_anio(2014),
"2015" = consolidar_datos_por_anio(2015),
"2016" = consolidar_datos_por_anio(2016),
"2017" = consolidar_datos_por_anio(2017),
"2018" = consolidar_datos_por_anio(2018),
"2019" = consolidar_datos_por_anio(2019),
"2020" = consolidar_datos_por_anio(2020)
)
# Encontrar las DMUs comunes en todos los años y filtrar los datos para incluir solo esas DMUs
dmus_comunes <- Reduce(intersect, lapply(datos_iniciales, `[[`, "IdEstablecimiento"))
datos <- lapply(datos_iniciales, function(data) data[data$IdEstablecimiento %in% dmus_comunes, ])
# -------------------------------------------- #
#  CÁLCULO DEA INPUT
# -------------------------------------------- #
resultados_in <- resultados_iteracion(datos, "io")
# Eliminacion de datos atipicos
datos_cut_in_vrs <- lapply(datos, function(df) {
df %>% filter(!(IdEstablecimiento %in% resultados_in[["vector_outliers_vrs"]]))
})
datos_cut_in_crs <- lapply(datos, function(df) {
df %>% filter(!(IdEstablecimiento %in% resultados_in[["vector_outliers_crs"]]))
})
resultados_in_cut_vrs <- resultados_iteracion(datos_cut_in_vrs, "io")
resultados_in_cut_crs <- resultados_iteracion(datos_cut_in_crs, "io")
# -------------------------------------------- #
#  CÁLCULO DEA OUTPUT
# -------------------------------------------- #
resultados_out <- aplicar_analisis_dea(datos, "oo")
# Eliminacion de datos atipicos
datos_cut_out_vrs <- lapply(datos, function(df) {
df %>% filter(!(IdEstablecimiento %in% resultados_out[["vector_outliers_vrs"]]))
})
datos_cut_out_crs <- lapply(datos, function(df) {
df %>% filter(!(IdEstablecimiento %in% resultados_out[["vector_outliers_crs"]]))
})
resultados_out_cut_vrs <- resultados_iteracion(datos_cut_out_vrs, "oo")
resultados_iteracion <- function(datos, orientacion){
original <-  aplicar_analisis_dea(datos, orientacion)
iteracion_1_vrs <- aplicar_sensibilidad(datos, lapply(original, `[[`, "data"), 1, orientacion, "vrs", FALSE)
iteracion_2_vrs <- aplicar_sensibilidad(datos, lapply(iteracion_1_vrs, `[[`, "data"), 1, orientacion, "vrs", FALSE)
iteracion_1_crs <- aplicar_sensibilidad(datos, lapply(original, `[[`, "data"), 1, orientacion, "crs", TRUE)
iteracion_2_crs <- aplicar_sensibilidad(datos, lapply(iteracion_1_crs, `[[`, "data"), 1, orientacion, "crs", TRUE)
resultados_combinados <- combinar_resultados_iteraciones(original, iteracion_1_vrs, iteracion_2_vrs, iteracion_1_crs, iteracion_2_crs)
resultados_correlacion <- calcular_y_graficar_correlaciones(resultados_combinados, anios)
# Crear una lista vacía para almacenar los valores atípicos por año
lista_outliers_vrs <- list()
# Crear un vector vacío para almacenar todos los valores atípicos sin duplicados
vector_outliers_vrs <- c()
lista_outliers_crs <- list()
# Crear un vector vacío para almacenar todos los valores atípicos sin duplicados
vector_outliers_crs <- c()
# Especificar los años que quieres iterar
anios <- c("2014", "2015", "2016", "2017", "2018", "2019", "2020")
# Iterar sobre cada año
for (anio in anios) {
# Generar el boxplot para la columna "vrs" del año actual
boxplot(original[[anio]][["data"]]$vrs,
main = paste("Boxplot de VRS - Año", anio),
ylab = "VRS",
col = "lightgray")
# Obtener los valores atípicos en la columna "vrs" del año actual
outliers_vrs <- boxplot.stats(original[[anio]][["data"]]$vrs)$out
points(rep(1, length(outliers_vrs)), outliers_vrs, col = "red", pch = 16)
# Filtrar el dataframe para obtener los IDs de los valores atípicos
ids_outliers_vrs <- original[[anio]][["data"]] %>%
filter(vrs %in% outliers_vrs) %>%
select(IdEstablecimiento, vrs)
# Añadir los valores atípicos del año actual a la lista, con el nombre del año
lista_outliers_vrs[[anio]] <- ids_outliers_vrs
# Añadir los IDs al vector de valores atípicos, asegurando que no se repitan
vector_outliers_vrs <- unique(c(vector_outliers_vrs, ids_outliers_vrs$IdEstablecimiento))
# Generar el boxplot para la columna "vrs" del año actual
boxplot(original[[anio]][["data"]]$crs,
main = paste("Boxplot de VRS - Año", anio),
ylab = "VRS",
col = "lightgray")
# Obtener los valores atípicos en la columna "vrs" del año actual
outliers_crs <- boxplot.stats(original[[anio]][["data"]]$crs)$out
points(rep(1, length(outliers_crs)), outliers_crs, col = "red", pch = 16)
# Filtrar el dataframe para obtener los IDs de los valores atípicos
ids_outliers_crs <- original[[anio]][["data"]] %>%
filter(crs %in% outliers_crs) %>%
select(IdEstablecimiento, crs)
# Añadir los valores atípicos del año actual a la lista, con el nombre del año
lista_outliers_crs[[anio]] <- ids_outliers_crs
# Añadir los IDs al vector de valores atípicos, asegurando que no se repitan
vector_outliers_crs <- unique(c(vector_outliers_crs, ids_outliers_crs$IdEstablecimiento))
}
list(
original =  original,
#iteracion_1_vrs = iteracion_1_vrs,
#iteracion_2_vrs = iteracion_2_vrs,
#iteracion_1_crs = iteracion_1_crs,
#iteracion_2_crs = iteracion_2_crs,
resultados_combinados = resultados_combinados,
resultados_correlacion = resultados_correlacion,
lista_outliers_vrs = lista_outliers_vrs,
vector_outliers_vrs = vector_outliers_vrs,
lista_outliers_crs = lista_outliers_crs,
vector_outliers_crs = vector_outliers_crs
)
}
resultados_in <- resultados_iteracion(datos, "io")
resultados_iteracion <- function(datos, orientacion){
original <-  aplicar_analisis_dea(datos, orientacion)
iteracion_1_vrs <- aplicar_sensibilidad(datos, lapply(original, `[[`, "data"), 0.99, orientacion, "vrs", FALSE)
iteracion_2_vrs <- aplicar_sensibilidad(datos, lapply(iteracion_1_vrs, `[[`, "data"), 0.99, orientacion, "vrs", FALSE)
iteracion_1_crs <- aplicar_sensibilidad(datos, lapply(original, `[[`, "data"), 1, orientacion, "crs", TRUE)
iteracion_2_crs <- aplicar_sensibilidad(datos, lapply(iteracion_1_crs, `[[`, "data"), 1, orientacion, "crs", TRUE)
resultados_combinados <- combinar_resultados_iteraciones(original, iteracion_1_vrs, iteracion_2_vrs, iteracion_1_crs, iteracion_2_crs)
resultados_correlacion <- calcular_y_graficar_correlaciones(resultados_combinados, anios)
# Crear una lista vacía para almacenar los valores atípicos por año
lista_outliers_vrs <- list()
# Crear un vector vacío para almacenar todos los valores atípicos sin duplicados
vector_outliers_vrs <- c()
lista_outliers_crs <- list()
# Crear un vector vacío para almacenar todos los valores atípicos sin duplicados
vector_outliers_crs <- c()
# Especificar los años que quieres iterar
anios <- c("2014", "2015", "2016", "2017", "2018", "2019", "2020")
# Iterar sobre cada año
for (anio in anios) {
# Generar el boxplot para la columna "vrs" del año actual
boxplot(original[[anio]][["data"]]$vrs,
main = paste("Boxplot de VRS - Año", anio),
ylab = "VRS",
col = "lightgray")
# Obtener los valores atípicos en la columna "vrs" del año actual
outliers_vrs <- boxplot.stats(original[[anio]][["data"]]$vrs)$out
points(rep(1, length(outliers_vrs)), outliers_vrs, col = "red", pch = 16)
# Filtrar el dataframe para obtener los IDs de los valores atípicos
ids_outliers_vrs <- original[[anio]][["data"]] %>%
filter(vrs %in% outliers_vrs) %>%
select(IdEstablecimiento, vrs)
# Añadir los valores atípicos del año actual a la lista, con el nombre del año
lista_outliers_vrs[[anio]] <- ids_outliers_vrs
# Añadir los IDs al vector de valores atípicos, asegurando que no se repitan
vector_outliers_vrs <- unique(c(vector_outliers_vrs, ids_outliers_vrs$IdEstablecimiento))
# Generar el boxplot para la columna "vrs" del año actual
boxplot(original[[anio]][["data"]]$crs,
main = paste("Boxplot de VRS - Año", anio),
ylab = "VRS",
col = "lightgray")
# Obtener los valores atípicos en la columna "vrs" del año actual
outliers_crs <- boxplot.stats(original[[anio]][["data"]]$crs)$out
points(rep(1, length(outliers_crs)), outliers_crs, col = "red", pch = 16)
# Filtrar el dataframe para obtener los IDs de los valores atípicos
ids_outliers_crs <- original[[anio]][["data"]] %>%
filter(crs %in% outliers_crs) %>%
select(IdEstablecimiento, crs)
# Añadir los valores atípicos del año actual a la lista, con el nombre del año
lista_outliers_crs[[anio]] <- ids_outliers_crs
# Añadir los IDs al vector de valores atípicos, asegurando que no se repitan
vector_outliers_crs <- unique(c(vector_outliers_crs, ids_outliers_crs$IdEstablecimiento))
}
list(
original =  original,
#iteracion_1_vrs = iteracion_1_vrs,
#iteracion_2_vrs = iteracion_2_vrs,
#iteracion_1_crs = iteracion_1_crs,
#iteracion_2_crs = iteracion_2_crs,
resultados_combinados = resultados_combinados,
resultados_correlacion = resultados_correlacion,
lista_outliers_vrs = lista_outliers_vrs,
vector_outliers_vrs = vector_outliers_vrs,
lista_outliers_crs = lista_outliers_crs,
vector_outliers_crs = vector_outliers_crs
)
}
resultados_in <- resultados_iteracion(datos, "io")
resultados_iteracion <- function(datos, orientacion){
original <-  aplicar_analisis_dea(datos, orientacion)
iteracion_1_vrs <- aplicar_sensibilidad(datos, lapply(original, `[[`, "data"), 0.99, orientacion, "vrs", FALSE)
iteracion_2_vrs <- aplicar_sensibilidad(datos, lapply(iteracion_1_vrs, `[[`, "data"), 0.99, orientacion, "vrs", FALSE)
iteracion_1_crs <- aplicar_sensibilidad(datos, lapply(original, `[[`, "data"), 0.99, orientacion, "crs", FALSE)
iteracion_2_crs <- aplicar_sensibilidad(datos, lapply(iteracion_1_crs, `[[`, "data"), 0.99, orientacion, "crs", FALSE)
resultados_combinados <- combinar_resultados_iteraciones(original, iteracion_1_vrs, iteracion_2_vrs, iteracion_1_crs, iteracion_2_crs)
resultados_correlacion <- calcular_y_graficar_correlaciones(resultados_combinados, anios)
# Crear una lista vacía para almacenar los valores atípicos por año
lista_outliers_vrs <- list()
# Crear un vector vacío para almacenar todos los valores atípicos sin duplicados
vector_outliers_vrs <- c()
lista_outliers_crs <- list()
# Crear un vector vacío para almacenar todos los valores atípicos sin duplicados
vector_outliers_crs <- c()
# Especificar los años que quieres iterar
anios <- c("2014", "2015", "2016", "2017", "2018", "2019", "2020")
# Iterar sobre cada año
for (anio in anios) {
# Generar el boxplot para la columna "vrs" del año actual
boxplot(original[[anio]][["data"]]$vrs,
main = paste("Boxplot de VRS - Año", anio),
ylab = "VRS",
col = "lightgray")
# Obtener los valores atípicos en la columna "vrs" del año actual
outliers_vrs <- boxplot.stats(original[[anio]][["data"]]$vrs)$out
points(rep(1, length(outliers_vrs)), outliers_vrs, col = "red", pch = 16)
# Filtrar el dataframe para obtener los IDs de los valores atípicos
ids_outliers_vrs <- original[[anio]][["data"]] %>%
filter(vrs %in% outliers_vrs) %>%
select(IdEstablecimiento, vrs)
# Añadir los valores atípicos del año actual a la lista, con el nombre del año
lista_outliers_vrs[[anio]] <- ids_outliers_vrs
# Añadir los IDs al vector de valores atípicos, asegurando que no se repitan
vector_outliers_vrs <- unique(c(vector_outliers_vrs, ids_outliers_vrs$IdEstablecimiento))
# Generar el boxplot para la columna "vrs" del año actual
boxplot(original[[anio]][["data"]]$crs,
main = paste("Boxplot de VRS - Año", anio),
ylab = "VRS",
col = "lightgray")
# Obtener los valores atípicos en la columna "vrs" del año actual
outliers_crs <- boxplot.stats(original[[anio]][["data"]]$crs)$out
points(rep(1, length(outliers_crs)), outliers_crs, col = "red", pch = 16)
# Filtrar el dataframe para obtener los IDs de los valores atípicos
ids_outliers_crs <- original[[anio]][["data"]] %>%
filter(crs %in% outliers_crs) %>%
select(IdEstablecimiento, crs)
# Añadir los valores atípicos del año actual a la lista, con el nombre del año
lista_outliers_crs[[anio]] <- ids_outliers_crs
# Añadir los IDs al vector de valores atípicos, asegurando que no se repitan
vector_outliers_crs <- unique(c(vector_outliers_crs, ids_outliers_crs$IdEstablecimiento))
}
list(
original =  original,
#iteracion_1_vrs = iteracion_1_vrs,
#iteracion_2_vrs = iteracion_2_vrs,
#iteracion_1_crs = iteracion_1_crs,
#iteracion_2_crs = iteracion_2_crs,
resultados_combinados = resultados_combinados,
resultados_correlacion = resultados_correlacion,
lista_outliers_vrs = lista_outliers_vrs,
vector_outliers_vrs = vector_outliers_vrs,
lista_outliers_crs = lista_outliers_crs,
vector_outliers_crs = vector_outliers_crs
)
}
resultados_in <- resultados_iteracion(datos, "io")
View(resultados_in)
