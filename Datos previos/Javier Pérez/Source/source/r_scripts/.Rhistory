setwd("~/Documents/usach/health_holmes/source/R_scripts")
# Packages
library(deaR)
library(qcc)
library(ggplot2)
library(rPref)
library(dplyr)
library(igraph)
# Global
start_year <- 2014
end_year <- 2020
for (year in start_year:end_year) {
read_file_path <- sprintf("../../data/consolidated_data/%d.csv", year)
write_file_path <- sprintf("../../data/technical_data/%d.csv", year)
# Read the CSV file
data <- read.csv(read_file_path, header = TRUE)
# Filter rows
normalized_columns = c(1, 3, 5, 7, 9, 11, 13)
input_columns = c(2, 3)
output_columns= c(4, 5, 6, 7)
filtered_data <- data[, normalized_columns]
# DEA input
dea_data <- make_deadata(filtered_data, ni= 3, no= 2, dmus = 1,
inputs = input_columns, outputs = output_columns)
dea_input_result <- model_basic(dea_data,
orientation = "io",
rts = "crs",)
# DEA output
dea_output_result <- model_basic(dea_data,
orientation = "oo",
rts = "crs",)
# DEA directional
dea_dir_result <- model_basic(dea_data,
orientation = "dir",
rts = "crs",)
# Output data frame
TE_input <- efficiencies(dea_input_result)
TE_output <- efficiencies(dea_output_result)
TE_directional <- efficiencies(dea_dir_result)
hospitals_data <- data.frame(TE_input)
hospitals_data$TE_output <- data.frame(TE_output)$TE_output
hospitals_data$TE_directional <- data.frame(TE_directional)$TE_directional
hospitals_data <- cbind(hospital_id = rownames(hospitals_data),
hospitals_data)
rownames(hospitals_data) <- 1:nrow(hospitals_data) # nolint: seq_linter.
hospitals_data$input_total <- rowSums(filtered_data[, input_columns])
hospitals_data$output_total <- rowSums(filtered_data[, output_columns])
hospitals_data <- hospitals_data[, c("hospital_id",
"input_total",
"output_total",
"TE_input",
"TE_output",
"TE_directional")]
# Save to file
hospitals_data$hospital_id <- gsub("DMU", "", hospitals_data$hospital_id)
write.csv(hospitals_data, write_file_path, row.names = FALSE, quote = FALSE)
}
# Packages
library(deaR)
library(qcc)
library(ggplot2)
library(rPref)
library(dplyr)
library(igraph)
# Global
start_year <- 2014
end_year <- 2020
for (year in start_year:end_year) {
read_file_path <- sprintf("../../data/consolidated_data/%d.csv", year)
write_file_path <- sprintf("../../data/technical_data/%d.csv", year)
# Read the CSV file
data <- read.csv(read_file_path, header = TRUE)
# Filter rows
normalized_columns <- c(1, 3, 5, 7, 9, 11, 13)
input_columns <- c(2, 3)
output_columns <- c(4, 5, 6, 7)
filtered_data <- data[, normalized_columns]
# DEA input
dea_data <- make_deadata(filtered_data, ni= 3, no= 2, dmus = 1,
inputs = input_columns, outputs = output_columns)
dea_input_result <- model_basic(dea_data,
orientation = "io",
rts = "crs", )
# DEA output
dea_output_result <- model_basic(dea_data,
orientation = "oo",
rts = "crs", )
# DEA directional
dea_dir_result <- model_basic(dea_data,
orientation = "dir",
rts = "crs", )
# Output data frame
te_input <- efficiencies(dea_input_result)
te_output <- efficiencies(dea_output_result)
te_directional <- efficiencies(dea_dir_result)
hospitals_data <- data.frame(te_input)
hospitals_data$te_output <- data.frame(te_output)$te_output
hospitals_data$te_directional <- data.frame(te_directional)$te_directional
hospitals_data <- cbind(hospital_id = rownames(hospitals_data),
hospitals_data)
rownames(hospitals_data) <- 1:nrow(hospitals_data) # nolint: seq_linter.
hospitals_data$input_total <- rowSums(filtered_data[, input_columns])
hospitals_data$output_total <- rowSums(filtered_data[, output_columns])
hospitals_data <- hospitals_data[, c("hospital_id",
"input_total",
"output_total",
"te_input",
"te_output",
"te_directional")]
# Save to file
hospitals_data$hospital_id <- gsub("DMU", "", hospitals_data$hospital_id)
write.csv(hospitals_data, write_file_path, row.names = FALSE, quote = FALSE)
}
source("~/Documents/usach/health_holmes/source/r_scripts/legacy/dea_farrel.R")
# Packages
library(productivity)
return_types <- c("crs", "vrs", "nirs")
orientation_types <- c("in", "out")
# Read the CSV file
read_file_path <- "../../data/malmquist/malmquist.csv"
hospital_data <- read.csv(read_file_path, header = TRUE)
setwd("~/Documents/usach/health_holmes/source/r_scripts")
# Packages
library(productivity)
return_types <- c("crs", "vrs", "nirs")
orientation_types <- c("in", "out")
# Read the CSV file
read_file_path <- "../../data/malmquist/malmquist.csv"
hospital_data <- read.csv(read_file_path, header = TRUE)
hospital_data <- hospital_data[, -which(names(hospital_data) == "region")]
hospital_data <- hospital_data[, -which(names(hospital_data) == "GRD")]
for (orientation_type in orientation_types) {
for (return_type in return_types) {
write_file_path <- sprintf("../../results/dea_malmquist/malmquist_%s_%s.csv",
orientation_type,
return_type)
malmquist <- malm(data = hospital_data, id.var = "DMUs", time.var = "period",
orientation=orientation_type, rts = return_type,
x.vars = c("X21_value_normalized", "X22_value_normalized"),
y.vars = c("hospital_discharge_normalized",
"diagnostic_tests_normalized",
"surgical_interventions_normalized",
"medical_consultations_normalized"))
# Vector with 324 elements
malmquist_index <- malmquist[["Changes"]][["malmquist"]]
# Reshape the vector into a dataframe with 6 columns (2015 to 2020) and 55 rows
num_years <- 6
chunk_size <- 54
# Create an empty dataframe to store the values
malmquist_result <- data.frame(matrix(NA, nrow = chunk_size, ncol = num_years))
# Loop through the vector and populate the dataframe
for (i in 1:num_years) {
start_index <- (i - 1) * chunk_size + 1
end_index <- i * chunk_size
malmquist_result[, i] <- malmquist_index[start_index:end_index]
}
rownames(malmquist_result) <- hospital_data$DMUs[1:54]
colnames(malmquist_result) <- c(2015:2020)
malmquist_result <- round(malmquist_result, 2)
write.csv(malmquist_result,
write_file_path,
row.names = TRUE,
quote = FALSE)
print_text <- sprintf("Malmquimst index calculated with %s and %s... done!",
orientation_type,
return_type)
print(print_text)
}
}
View(malmquist)
View(malmquist_result)
View(malmquist)
View(malmquist)
View(hospital_data)
