source("~/.active-rstudio-document")
launch_editor()
library("shinyuieditor")
launch_editor()
launch_editor(app_loc = "loc/of/app")
install.packages("rstudioapi")
launch_editor(app_loc = "loc/of/app")
launch_editor(app_loc = "loc/of/app")
?launch_editor
launch_editor(app_loc = "loc/of/app",stop_on_browser_close = T)
library("phangorn")
optim.parsimony
?optim.parsimony
library("phangorn")
library("ggplot2")
ibrary("phangorn")
library("phangorn")
install.packages("rstudioconnect")
install.packages("rsconnect ")
install.packages("rsconnect")
install.packages("rsconnect")
?zip
install.packages("utils")
install.packages("utils")
install.packages("utils")
install.packages("utils")
install.packages("utils")
install.packages("utils")
install.packages("utils")
q()
install.packages("rjava",dependencies = T)
install.packages("rJava",dependencies = T)
Rversion)
Rversion
R.version
install.packages("xlsx",dependencies=T)
shiny::runApp('C:/Users/manue/Desktop/APPArticulos/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos/APPArticulos')
source("C:/Users/manue/Desktop/APPArticulos/APPArticulos/www/SOURCE/UI/tab_resumen.R")
runApp('C:/Users/manue/Desktop/APPArticulos/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos/APPArticulos')
library(shinyBS)
install.packages("shinyBS")
runApp('C:/Users/manue/Desktop/APPArticulos/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos/APPArticulos')
bsTooltip
?bsTooltip
runApp('C:/Users/manue/Desktop/APPArticulos/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos/APPArticulos')
runApp('C:/Users/manue/Desktop/v10/APK')
runApp('C:/Users/manue/Desktop/v10/APK')
runApp('C:/Users/manue/Desktop/APPArticulos/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos/APPArticulos')
source("~/.active-rstudio-document")
auth_id_search
?auth_id_search
source("~/.active-rstudio-document")
author_documents
author_documents <- author_df(author_id, key = api_key)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
get_api_key
get_api_key()
get_api_key(reveal=T)
?get_api_key()
get_api_key("7c9bcc13400a725b1c9b12d498d0fc71")
have_api_key("7c9bcc13400a725b1c9b12d498d0fc71")
have_api_key("")
have_api_key("dsadsa")
res = get_api_key(error = FALSE)
res
print(res)
print(res,reveal=T)
source("~/.active-rstudio-document")
?set_api_key
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
res
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
# install
devtools::install_github("ikashnitsky/sjrdata")
# load
library(sjrdata)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
# Construir la URL (esta parte depende de cómo está estructurado el sitio web de SCIMAGO)
url <- paste0("https://www.scimagojr.com/journalsearch.php?q=", journal_name, "&tip=sid&clean=0")
url <- paste0("https://www.scimagojr.com/journalsearch.php?q=", "Journal of Volcanology and Geothermal Research", "&tip=sid&clean=0")
page <- read_html(url)
url
# Leer la página
page <- read_html(url)
?read_html
page <- xml2::read_html(url)
url <- paste0("https://www.scimagojr.com/journalsearch.php?q=ENERGY+PROCEDIA")
url
page <- rvest::read_html(url)
page
page[[1]]
page[1]
page[2]
page
library("rvest")
autores=html_attr(html_nodes(page, "meta[name=citation_author]"),'content')
autores
autores=html_attr(html_nodes(page,'content')
)
autores=html_attr(html_nodes(page,'content'))
autores
page
page[[1]]
page[[1]][1]
page[1]
page[1][1}]
page[2
]
page$doc
page$doc[[1]]
page
page[3]
page
url <- paste0("https://www.scimagojr.com/journalsearch.php?q=17700156736&tip=sid&clean=0")
# Leer la página
page <- rvest::read_html(url)
page
as.character(page)
url <- paste0("https://www.scimagojr.com/journalsearch.php?q=ENERGY+PROCEDIA")
# Leer la página
page <- rvest::read_html(url)
as.character(page)
source("~/.active-rstudio-document")
page_txt
source("~/.active-rstudio-document")
codigo
# Construir la URL (esta parte depende de cómo está estructurado el sitio web de SCIMAGO)
url <- paste0("https://www.scimagojr.com/journalsearch.php?q=IEEE Transactions on Biomedical Engineering")
# Leer la página
page <- rvest::read_html(url)
# Construir la URL (esta parte depende de cómo está estructurado el sitio web de SCIMAGO)
url <- paste0("https://www.scimagojr.com/journalsearch.php?q=IEEE+Transactions+on+Biomedical+Engineering")
# Leer la página
page <- rvest::read_html(url)
page_txt = as.character(page)
codigo <- str_extract(page_txt, "\\b\\d{11}\\b")
codigo
page_txt
codigo <- str_extract(page_txt, "\\b\\d{11}\\b")
codigo
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
page_txt
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
respuesta
source("~/.active-rstudio-document")
respuesta
source("~/.active-rstudio-document")
respuesta
source("~/.active-rstudio-document")
response
response=POST(
# curl https://api.openai.com/v1/chat/completions
url = "https://api.openai.com/v1/chat/completions",
# -H "Authorization: Bearer $OPENAI_API_KEY"
add_headers(Authorization = paste("Bearer", api_key)),
# -H "Content-Type: application/json"
content_type_json(),
# -d '{
#   "model": "gpt-3.5-turbo",
#   "messages": [{"role": "user", "content": "What is a banana?"}]
# }'
encode = "json",
body = list(
model = "gpt-3.5-turbo-1106",
max_tokens = 50,
messages = list(list(role = "user", content = consulta))
)
)
consulta = "¿Quién descubrió América?"
response=POST(
# curl https://api.openai.com/v1/chat/completions
url = "https://api.openai.com/v1/chat/completions",
# -H "Authorization: Bearer $OPENAI_API_KEY"
add_headers(Authorization = paste("Bearer", api_key)),
# -H "Content-Type: application/json"
content_type_json(),
# -d '{
#   "model": "gpt-3.5-turbo",
#   "messages": [{"role": "user", "content": "What is a banana?"}]
# }'
encode = "json",
body = list(
model = "gpt-3.5-turbo-1106",
max_tokens = 50,
messages = list(list(role = "user", content = consulta))
)
)
response
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
response=POST(
# curl https://api.openai.com/v1/chat/completions
url = "https://api.openai.com/v1/chat/completions",
# -H "Authorization: Bearer $OPENAI_API_KEY"
add_headers(Authorization = paste("Bearer", api_key)),
# -H "Content-Type: application/json"
content_type_json(),
# -d '{
#   "model": "gpt-3.5-turbo",
#   "messages": [{"role": "user", "content": "What is a banana?"}]
# }'
encode = "json",
body = list(
model = "gpt-3.5-turbo-1106",
max_tokens = 50,
messages = list(list(role = "user", content = consulta))
)
)
response
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
content(response)
source("~/.active-rstudio-document")
content(response)
source("~/.active-rstudio-document")
content(response)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
install.packages("openai")
install.packages("gpt")
install.packages("gptstudio")
Sys.setenv(OPENAI_API_KEY = "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")
Sys.setenv(OPENAI_API_KEY = "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")
gptstudio:::addin_chatgpt()
dsa
ds
(OPENAI_API_KEY = "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")
(OPENAI_API_KEY = "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")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
install.packages("chatgpt")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
?ask_chatgpt
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
?chatgpt
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
source("~/.active-rstudio-document")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
source("~/.active-rstudio-document")
install.packages("janitor")
source("~/.active-rstudio-document")
save(get(paste0("df_cr_1996_", last_year)),
file = paste0("df_cr_1996_", last_year, ".rda"))
df_cr
df_jr
datos = data.frame(df_jr)
head(datos)
View(datos)
source("~/.active-rstudio-document")
shiny::runApp('C:/Users/manue/Desktop/APPArticulos/APPArticulos')
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
have_api_key()
res = author_df(last_name = "Muschelli", first_name = "John", verbose = FALSE, general = FALSE)
shiny::runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
library("shinyWidgets")
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
source("C:/Users/manue/Desktop/APPArticulos/www/SOURCE/UI/tab_resumen.R")
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
?sendSweetAlert
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/APPArticulos')
runApp('C:/Users/manue/Desktop/v12/APK')
runApp('C:/Users/manue/Desktop/v12/APK')
shiny::runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
showNotification
?showNotification
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
?shinyalert
runApp('C:/Users/manue/Desktop/v15/APK')
?shinyalert
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
runApp('C:/Users/manue/Desktop/v15/APK')
source("~/.active-rstudio-document")
version()
rversion()
rversion
Rversion
Rversion()
Rversion()R.Version()
R.Version()
install.packages("igraph")
install.packages("ggraph")
library("ggraph")
library("igraph")
q()
R.version
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
sequence_data
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
sequence_data
source("~/.active-rstudio-document")
sequence_data
source("~/.active-rstudio-document")
search_result$ids
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
genbank_id
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
search_result$ids
source("~/.active-rstudio-document")
triplet
triplet_start
sequence
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
genetic_code
#-----------------------------
#Análisis DEA
#----------------------------
datos_DEA=read.csv("DEA.csv",header=T, sep=";")
setwd("C:/Users/manue/Desktop/ANALISIS_DEA")
#-----------------------------
#Análisis DEA
#----------------------------
datos_DEA=read.csv("DEA.csv",header=T, sep=";")
lista_modelos = unique(datos_DEA$MODEL)
M_list = NULL
Geo_list = NULL
DRG_list = NULL
for (index_models in lista_modelos)
{
datos_filtrados = datos_DEA[which(datos_DEA$MODEL==index_models),]
#Input
idx_max = which(datos_filtrados$te_input==max(datos_filtrados$te_input))
if (datos_filtrados$S_MODEL[1]=="M")
{ M_list = c(M_list,datos_filtrados$hospital_id[idx_max])}
if (datos_filtrados$S_MODEL[1]=="Geo")
{ Geo_list = c(Geo_list,datos_filtrados$hospital_id[idx_max])}
if (datos_filtrados$S_MODEL[1]=="DRG")
{ DRG_list = c(DRG_list,datos_filtrados$hospital_id[idx_max])}
#Output
idx_max = which(datos_filtrados$te_output==max(datos_filtrados$te_output))
if (datos_filtrados$S_MODEL[1]=="M")
{ M_list = c(M_list,datos_filtrados$hospital_id[idx_max])}
if (datos_filtrados$S_MODEL[1]=="Geo")
{ Geo_list = c(Geo_list,datos_filtrados$hospital_id[idx_max])}
if (datos_filtrados$S_MODEL[1]=="DRG")
{ DRG_list = c(DRG_list,datos_filtrados$hospital_id[idx_max])}
#Directional
idx_max = which(datos_filtrados$te_directional==max(datos_filtrados$te_directional))
if (datos_filtrados$S_MODEL[1]=="M")
{ M_list = c(M_list,datos_filtrados$hospital_id[idx_max])}
if (datos_filtrados$S_MODEL[1]=="Geo")
{ Geo_list = c(Geo_list,datos_filtrados$hospital_id[idx_max])}
if (datos_filtrados$S_MODEL[1]=="DRG")
{ DRG_list = c(DRG_list,datos_filtrados$hospital_id[idx_max])}
}
M_list
tabla(M_list)
table(M_list)
sort(table(M_list))
sort(table(M_list),decreasing = T)
source("C:/Users/manue/Desktop/ANALISIS_DEA/datos.R")
source("C:/Users/manue/Desktop/ANALISIS_DEA/datos.R")
source("C:/Users/manue/Desktop/ANALISIS_DEA/datos.R")
M_list
source("C:/Users/manue/Desktop/ANALISIS_DEA/datos.R")
source("C:/Users/manue/Desktop/ANALISIS_DEA/datos.R")
source("C:/Users/manue/Desktop/ANALISIS_DEA/datos.R")
source("C:/Users/manue/Desktop/ANALISIS_DEA/datos.R")
source("C:/Users/manue/Desktop/ANALISIS_DEA/datos.R")
