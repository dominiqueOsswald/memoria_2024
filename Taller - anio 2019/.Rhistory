datos_2019 <- read_excel("Consolidado estadísticas hospitalarias 2014-2021.xlsx", sheet = 6, skip = 2)  %>% rename("IdEstablecimiento" = "Cód. Estab.") %>% filter(`Nombre Nivel Cuidado` == "Datos Establecimiento") %>% select(-"Cód. Nivel Cuidado", -"Cód. SS/SEREMI", -"Nombre Nivel Cuidado") %>%  semi_join(predicciones_grd_2019, by = "IdEstablecimiento")
datos_2019 <- datos_2019[1:5]
# ----- INPUTS -----
#DATOS FINANCIEROS - sub 21 GASTOS DE PERSONAL ; sub 22 GASTOS DE BIENES Y SERVICIOS
financiero_2019 <- read.csv("financial_data_2019.csv") %>% select(hospital_id, X21_value, X22_value) %>% rename("IdEstablecimiento" = "hospital_id")
#CAMAS
dias_cama_ocupadas_2019 <-  datos_2019 %>% filter(Glosa == "Dias Cama Ocupados") %>%  select(1:5) %>% rename("dias_cama_ocupados" = "Acum") %>% select(-Glosa)
#TRES VARIABLES DE INPUTS
input_2019 <- left_join(financiero_2019, dias_cama_ocupadas_2019 %>% select(IdEstablecimiento,dias_cama_ocupados), by = "IdEstablecimiento")
#----- OUTPUT -----
#EGRESOS
egresos_2019 <-  datos_2019 %>% filter(Glosa == "Numero de Egresos") %>%  select(1:5) %>% rename("egresos" = "Acum") %>% select(-Glosa)
egresos_grd_2019 <- egresos_2019 %>%
inner_join(predicciones_grd_2019, by = "IdEstablecimiento") %>%
mutate(Egresos.GRD = Prediction * egresos) %>%
select("Nombre SS/SEREMI",IdEstablecimiento, "Nombre Establecimiento", Egresos.GRD)
#En relacion a inputs
all_2019 <- inner_join(egresos_grd_2019, input_2019, by = "IdEstablecimiento")
View(all_2019)
View(hospitales)
all_2019 <- all_2019 %>%
left_join(hospitales %>% select(region), by = c("IdEstablecimiento" = "hospital_id"))
all_2019 <- all_2019 %>%
left_join(hospitales %>% select(hospital_id,region), by = c("IdEstablecimiento" = "hospital_id"))
# Obtener las eficiencias por DMU (hospitales)
eficiencias_dmu <- efficiencies(resultado_dea_2019_in_vrs)
# -------------------
# ------> DEA <------
input_dea_2019 <- as.data.frame(all_2019[c(5,6,7)])
View(input_2019)
#En relacion a inputs
all_2019 <- inner_join(egresos_grd_2019, input_2019, by = "IdEstablecimiento")
all_2019 <- all_2019 %>%
left_join(hospitales %>% select(hospital_id,region), by = c("IdEstablecimiento" = "hospital_id"))
# -------------------
# ------> DEA <------
input_dea_2019 <- as.data.frame(all_2019[c(5,6,7)])
output_dea_2019 <- as.data.frame(all_2019[c(4)])
View(input_dea_2019)
View(output_dea_2019)
put_dea_2019, Y = output_dea_2019, RTS = "vrs", ORIENTATION = "in")
# Orientado a los inputs
resultado_dea_2019_in_vrs <- dea(X = input_dea_2019, Y = output_dea_2019, RTS = "vrs", ORIENTATION = "in")
# Obtener las eficiencias por DMU (hospitales)
eficiencias_dmu <- efficiencies(resultado_dea_2019_in_vrs)
print(eficiencias_dmu)
# Crear un data frame con los nombres de los hospitales y sus eficiencias
resumen_dmu <- data.frame(
ID = all_2019$IdEstablecimiento,
Hospital = all_2019$region,
Eficiencia = eficiencias_dmu
)
# Crear un gráfico de puntos de eficiencia por hospital
plot(resumen_dmu$Eficiencia,
type = "p", # "p" para puntos
main = "Eficiencia de Hospitales en 2019",
xlab = "region",
ylab = "Eficiencia",
ylim = c(0, 1),
xaxt = "n", # No dibujar el eje x por ahora
pch = 19, # Tipo de punto sólido
col = "skyblue")
# Mostrar el resumen de eficiencia por hospital
print(resumen_dmu)
# Añadir las etiquetas de los hospitales en el eje x
axis(1, at = 1:length(resumen_dmu$Hospital), labels = resumen_dmu$Hospital, las = 2)
# Ordenar el dataframe por región y eficiencia
resumen_dmu <- resumen_dmu %>%
arrange(Hospital, Eficiencia)
# Crear un vector de posiciones en el eje X, agrupando por región
posiciones <- ave(1:nrow(resumen_dmu), resumen_dmu$Hospital, FUN = seq_along)
# Crear el gráfico de puntos
plot(posiciones, resumen_dmu$Eficiencia,
type = "p", # "p" para puntos
main = "Eficiencia de Hospitales en 2019",
xlab = "Región",
ylab = "Eficiencia",
ylim = c(0, 1),
xaxt = "n", # No dibujar el eje x por ahora
pch = 19, # Tipo de punto sólido
col = "skyblue")
# Añadir las etiquetas de las regiones en el eje X
axis(1, at = unique(posiciones), labels = unique(resumen_dmu$Hospital), las = 2)
# Añadir texto para mostrar el valor de la eficiencia junto a cada punto
text(posiciones, resumen_dmu$Eficiencia, labels = round(resumen_dmu$Eficiencia, 2), pos = 3, cex = 0.8)
# Opcional: Añadir líneas verticales para separar visualmente las regiones
abline(v = cumsum(table(resumen_dmu$Hospital)) + 0.5, col = "gray", lty = 2)
# Crear el gráfico de puntos
plot(posiciones, resumen_dmu$Eficiencia,
type = "p", # "p" para puntos
main = "Eficiencia de Hospitales en 2019",
xlab = "Región",
ylab = "Eficiencia",
ylim = c(0, 1),
xaxt = "n", # No dibujar el eje x por ahora
pch = 19, # Tipo de punto sólido
col = "skyblue")
# Añadir texto para mostrar el valor de la eficiencia junto a cada punto
text(posiciones, resumen_dmu$Eficiencia, labels = round(resumen_dmu$Eficiencia, 2), pos = 3, cex = 0.8)
# Crear el gráfico de puntos
plot(posiciones, resumen_dmu$Eficiencia,
type = "p", # "p" para puntos
main = "Eficiencia de Hospitales en 2019",
xlab = "Región",
ylab = "Eficiencia",
ylim = c(0, 1),
xaxt = "n", # No dibujar el eje x por ahora
pch = 19, # Tipo de punto sólido
col = "skyblue")
# Añadir las etiquetas de las regiones en el eje X
axis(1, at = unique(posiciones), labels = unique(resumen_dmu$Hospital), las = 2)
# Opcional: Añadir líneas verticales para separar visualmente las regiones
abline(v = cumsum(table(resumen_dmu$Hospital)) + 0.5, col = "gray", lty = 2)
# Crear el gráfico de puntos
plot(posiciones, resumen_dmu$Eficiencia,
type = "p", # "p" para puntos
main = "Eficiencia de Hospitales en 2019",
xlab = "Región",
ylab = "Eficiencia",
ylim = c(0, 1),
xaxt = "n", # No dibujar el eje x por ahora
pch = 19, # Tipo de punto sólido
col = "skyblue")
# Ordenar el dataframe por región y eficiencia
resumen_dmu <- resumen_dmu %>%
arrange(Eficiencia,Hospital)
# Mostrar el resumen de eficiencia por hospital
print(resumen_dmu)
# Crear un vector de posiciones en el eje X, agrupando por región
posiciones <- ave(1:nrow(resumen_dmu), resumen_dmu$Hospital, FUN = seq_along)
# Crear el gráfico de puntos
plot(posiciones, resumen_dmu$Eficiencia,
type = "p", # "p" para puntos
main = "Eficiencia de Hospitales en 2019",
xlab = "Región",
ylab = "Eficiencia",
ylim = c(0, 1),
xaxt = "n", # No dibujar el eje x por ahora
pch = 19, # Tipo de punto sólido
col = "skyblue")
# Crear un vector de posiciones en el eje X, agrupando por región
posiciones <- ave(1:nrow(resumen_dmu), resumen_dmu$Eficiencia, FUN = seq_along)
# Crear el gráfico de puntos
plot(posiciones, resumen_dmu$Eficiencia,
type = "p", # "p" para puntos
main = "Eficiencia de Hospitales en 2019",
xlab = "Región",
ylab = "Eficiencia",
ylim = c(0, 1),
xaxt = "n", # No dibujar el eje x por ahora
pch = 19, # Tipo de punto sólido
col = "skyblue")
Hospital
# Ordenar el dataframe por región y eficiencia
resumen_dmu <- resumen_dmu %>%
arrange(Hospital, Eficiencia)
# Crear un vector de posiciones en el eje X, agrupando por región
posiciones <- ave(1:nrow(resumen_dmu), resumen_dmu$Hospital, FUN = seq_along)
# Crear el gráfico de puntos
plot(posiciones, resumen_dmu$Eficiencia,
type = "p", # "p" para puntos
main = "Eficiencia de Hospitales en 2019",
xlab = "Región",
ylab = "Eficiencia",
ylim = c(0, 1),
xaxt = "n", # No dibujar el eje x por ahora
pch = 19, # Tipo de punto sólido
col = "skyblue")
# Añadir las etiquetas de las regiones en el eje X
axis(1, at = unique(posiciones), labels = unique(resumen_dmu$Hospital), las = 2)
# Crear una paleta de colores para las regiones
colores_regiones <- rainbow(length(unique(resumen_dmu$Hospital)))
# Asignar un color a cada hospital basado en su región
resumen_dmu <- resumen_dmu %>%
mutate(Color = colores_regiones[as.numeric(as.factor(Hospital))])
# Crear un vector de posiciones en el eje X, agrupando por región
posiciones <- ave(1:nrow(resumen_dmu), resumen_dmu$Hospital, FUN = seq_along)
# Crear el gráfico de puntos con colores por región
plot(posiciones, resumen_dmu$Eficiencia,
type = "p", # "p" para puntos
main = "Eficiencia de Hospitales en 2019",
xlab = "Región",
ylab = "Eficiencia",
ylim = c(0, 1),
xaxt = "n", # No dibujar el eje x por ahora
pch = 19, # Tipo de punto sólido
col = resumen_dmu$Color) # Aplicar los colores según la región
# Añadir las etiquetas de las regiones en el eje X
axis(1, at = unique(posiciones), labels = unique(resumen_dmu$Hospital), las = 2)
# Opcional: Añadir líneas verticales para separar visualmente las regiones
abline(v = cumsum(table(resumen_dmu$Hospital)) + 0.5, col = "gray", lty = 2)
# Crear el gráfico de puntos con colores por región
plot(posiciones, resumen_dmu$Eficiencia,
type = "p", # "p" para puntos
main = "Eficiencia de Hospitales en 2019",
xlab = "Región",
ylab = "Eficiencia",
ylim = c(0, 1),
xaxt = "n", # No dibujar el eje x por ahora
pch = 19, # Tipo de punto sólido
col = resumen_dmu$Color) # Aplicar los colores según la región
# Mostrar el resumen de eficiencia por hospital
print(resumen_dmu)
# Ordenar el dataframe por región y eficiencia
resumen_dmu <- resumen_dmu %>%
arrange(Hospital, Eficiencia)
# Crear una paleta de colores para las regiones
colores_regiones <- rainbow(length(unique(resumen_dmu$Hospital)))
# Asignar un color a cada hospital basado en su región
resumen_dmu <- resumen_dmu %>%
mutate(Color = colores_regiones[as.numeric(as.factor(Hospital))])
# Crear un vector de posiciones en el eje X, agrupando por región
posiciones <- ave(1:nrow(resumen_dmu), resumen_dmu$Hospital, FUN = seq_along)
# Crear el gráfico de puntos con colores por región
plot(posiciones, resumen_dmu$Eficiencia,
type = "p", # "p" para puntos
main = "Eficiencia de Hospitales en 2019",
xlab = "Región",
ylab = "Eficiencia",
ylim = c(0, 1),
xaxt = "n", # No dibujar el eje x por ahora
pch = 19, # Tipo de punto sólido
col = resumen_dmu$Color) # Aplicar los colores según la región
# Añadir las etiquetas de las regiones en el eje X
axis(1, at = unique(posiciones), labels = unique(resumen_dmu$Hospital), las = 2)
# Crear un vector de posiciones en el eje X, agrupando por región
posiciones <- ave(1:nrow(resumen_dmu), resumen_dmu$Hospital, FUN = seq_along)
# Obtener las posiciones medias para cada región para etiquetar el eje X
posiciones_unicas <- tapply(posiciones, resumen_dmu$Hospital, mean)
# Crear el gráfico de puntos con colores por región
plot(posiciones, resumen_dmu$Eficiencia,
type = "p", # "p" para puntos
main = "Eficiencia de Hospitales en 2019",
xlab = "Región",
ylab = "Eficiencia",
ylim = c(0, 1),
xaxt = "n", # No dibujar el eje x por ahora
pch = 19, # Tipo de punto sólido
col = resumen_dmu$Color) # Aplicar los colores según la región
# Añadir las etiquetas de las regiones en el eje X usando las posiciones medias
axis(1, at = posiciones_unicas, labels = names(posiciones_unicas), las = 2)
# Añadir una leyenda para los colores por región
legend("topright", legend = unique(resumen_dmu$Hospital), col = colores_regiones, pch = 19, title = "Región")
# Crear el gráfico de puntos con colores por región
plot(posiciones, resumen_dmu$Eficiencia,
type = "p", # "p" para puntos
main = "Eficiencia de Hospitales en 2019",
xlab = "Hospital",
ylab = "Eficiencia",
ylim = c(0, 1),
xaxt = "n", # No dibujar el eje x por ahora
pch = 19, # Tipo de punto sólido
col = resumen_dmu$Color) # Aplicar los colores según la región
# Crear el gráfico de puntos con colores por región
plot(resumen_dmu$Hospital, resumen_dmu$Eficiencia,
type = "p", # "p" para puntos
main = "Eficiencia de Hospitales en 2019",
xlab = "Hospital",
ylab = "Eficiencia",
ylim = c(0, 1),
xaxt = "n", # No dibujar el eje x por ahora
pch = 19, # Tipo de punto sólido
col = resumen_dmu$Color) # Aplicar los colores según la región
# Mostrar el resumen de eficiencia por hospital
print(resumen_dmu)
# Crear un data frame con los nombres de los hospitales y sus eficiencias
resumen_dmu <- data.frame(
ID = all_2019$IdEstablecimiento,
Region = all_2019$region,
Eficiencia = eficiencias_dmu
)
# Mostrar el resumen de eficiencia por hospital
print(resumen_dmu)
# Ordenar el dataframe por región y eficiencia
resumen_dmu <- resumen_dmu %>%
arrange(Region, Eficiencia)
# Crear una paleta de colores para las regiones
colores_regiones <- rainbow(length(unique(resumen_dmu$Hospital)))
# Asignar un color a cada hospital basado en su región
resumen_dmu <- resumen_dmu %>%
mutate(Color = colores_regiones[as.numeric(as.factor(Hospital))])
# Crear una paleta de colores para las regiones
colores_regiones <- rainbow(length(unique(resumen_dmu$Region)))
# Asignar un color a cada hospital basado en su región
resumen_dmu <- resumen_dmu %>%
mutate(Color = colores_regiones[as.numeric(as.factor(Region))])
# Crear un vector de posiciones en el eje X, agrupando por región
posiciones <- ave(1:nrow(resumen_dmu), resumen_dmu$Region, FUN = seq_along)
# Obtener las posiciones medias para cada región para etiquetar el eje X
posiciones_unicas <- tapply(posiciones, resumen_dmu$Region, mean)
# Crear el gráfico de puntos con colores por región
plot(resumen_dmu$Region, resumen_dmu$Eficiencia,
type = "p", # "p" para puntos
main = "Eficiencia de Hospitales en 2019",
xlab = "Region",
ylab = "Eficiencia",
ylim = c(0, 1),
xaxt = "n", # No dibujar el eje x por ahora
pch = 19, # Tipo de punto sólido
col = resumen_dmu$Color) # Aplicar los colores según la región
# Añadir las etiquetas de las regiones en el eje X usando las posiciones medias
axis(1, at = posiciones_unicas, labels = names(posiciones_unicas), las = 2)
# Añadir las etiquetas de las regiones en el eje X usando las posiciones medias
axis(1, at = posiciones, labels = names(posiciones), las = 2)
print(posiciones_unicas)
# Crear un vector de posiciones en el eje X, agrupando por región
posiciones <- ave(1:nrow(resumen_dmu), resumen_dmu$Region, FUN = seq_along)
# Obtener las posiciones medias para cada región para etiquetar el eje X
posiciones_unicas <- tapply(posiciones, resumen_dmu$Region, mean)
print(posiciones_unicas)
# Añadir las etiquetas de las regiones en el eje X usando las posiciones medias
axis(1, at = posiciones_unicas, labels = names(posiciones_unicas), las = 2)
# Crear el gráfico de puntos con colores por región
plot(resumen_dmu$Region, resumen_dmu$Eficiencia,
type = "p", # "p" para puntos
main = "Eficiencia de Hospitales en 2019",
xlab = "Region",
ylab = "Eficiencia",
ylim = c(0, 1),
xaxt = "n", # No dibujar el eje x por ahora
pch = 19, # Tipo de punto sólido
col = resumen_dmu$Color) # Aplicar los colores según la región
# Añadir las etiquetas de las regiones en el eje X usando las posiciones medias
axis(1, at = posiciones_unicas, labels = names(posiciones_unicas), las = 2)
# Obtener las posiciones medias para cada región para etiquetar el eje X
#posiciones_unicas <- tapply(posiciones, resumen_dmu$Region, mean)
posiciones_unicas <- 1:16
print(posiciones_unicas)
# Añadir las etiquetas de las regiones en el eje X usando las posiciones medias
axis(1, at = posiciones_unicas, labels = names(posiciones_unicas), las = 2)
# Crear el gráfico de puntos con colores por región
plot(resumen_dmu$Region, resumen_dmu$Eficiencia,
type = "p", # "p" para puntos
main = "Eficiencia de Hospitales en 2019",
xlab = "Region",
ylab = "Eficiencia",
ylim = c(0, 1),
xaxt = "n", # No dibujar el eje x por ahora
pch = 19, # Tipo de punto sólido
col = resumen_dmu$Color) # Aplicar los colores según la región
# Añadir las etiquetas de las regiones en el eje X usando las posiciones medias
axis(1, at = posiciones_unicas, labels = names(posiciones_unicas), las = 2)
# Añadir una leyenda para los colores por región
legend("topright", legend = unique(resumen_dmu$Hospital), col = colores_regiones, pch = 19, title = "Región")
# Añadir una leyenda para los colores por región
legend("topright", legend = unique(resumen_dmu$Region), col = colores_regiones, pch = 19, title = "Región")
# Crear el gráfico de puntos con colores por región
plot(resumen_dmu$Region, resumen_dmu$Eficiencia,
type = "p", # "p" para puntos
main = "Eficiencia de Hospitales en 2019",
xlab = "Region",
ylab = "Eficiencia",
ylim = c(0, 1),
xaxt = "n", # No dibujar el eje x por ahora
pch = 19, # Tipo de punto sólido
col = resumen_dmu$Color) # Aplicar los colores según la región
# Añadir texto para mostrar el valor de la eficiencia junto a cada punto
text(posiciones, resumen_dmu$Eficiencia, labels = round(resumen_dmu$Eficiencia, 2), pos = 3, cex = 0.8)
# Crear el gráfico de puntos con colores por región
plot(resumen_dmu$Region, resumen_dmu$Eficiencia,
type = "p", # "p" para puntos
main = "Eficiencia de Hospitales en 2019",
xlab = "Region",
ylab = "Eficiencia",
ylim = c(0, 1),
xaxt = "n", # No dibujar el eje x por ahora
pch = 19, # Tipo de punto sólido
col = resumen_dmu$Color) # Aplicar los colores según la región
# Opcional: Añadir líneas verticales para separar visualmente las regiones
abline(v = cumsum(table(resumen_dmu$Hospital)) + 0.5, col = "gray", lty = 2)
# Agregar una línea horizontal en la eficiencia 1 para identificar los hospitales eficientes
abline(h = 1, col = "red", lty = 2)
abline(h = 0.8, col = "orange", lty = 2)
# Opcional: Añadir líneas verticales para separar visualmente las regiones
abline(h = 1, col = "green", lty = 2)
abline(h = 0.5, col = "red", lty = 2)
# Añadir las etiquetas de las regiones en el eje X usando las posiciones medias
axis(1, at = posiciones_unicas, labels = names(posiciones_unicas), las = 2)
# Crear un data frame con los nombres de los hospitales y sus eficiencias
resumen_dmu <- data.frame(
ID = all_2019$IdEstablecimiento,
Region = all_2019$region,
Eficiencia = eficiencias_dmu
) %>%
arrange(Region, Eficiencia)
# Crear una paleta de colores para las regiones
colores_regiones <- rainbow(length(unique(resumen_dmu$Region)))
# Asignar un color a cada hospital basado en su región
resumen_dmu <- resumen_dmu %>%
mutate(Color = colores_regiones[as.numeric(as.factor(Region))])
# Añadir las etiquetas de las regiones en el eje X usando las posiciones medias
axis(1, at = 1:16, labels = names(1:16), las = 2)
# Crear el gráfico de puntos con colores por región
plot(resumen_dmu$Region, resumen_dmu$Eficiencia,
type = "p",
main = "Eficiencia de Hospitales en 2019",
xlab = "Region",
ylab = "Eficiencia",
ylim = c(0, 1),
xaxt = "n",
pch = 19,
col = resumen_dmu$Color) %>%
axis(1, at = 1:16, labels = names(1:16), las = 2)
# Crear el gráfico de puntos con colores por región
plot(resumen_dmu$Region, resumen_dmu$Eficiencia,
type = "p",
main = "Eficiencia de Hospitales en 2019",
xlab = "Region",
ylab = "Eficiencia",
ylim = c(0, 1),
xaxt = "n",
pch = 19,
col = resumen_dmu$Color) + axis(1, at = 1:16, labels = names(1:16), las = 2)
#En relacion a inputs
all_2019 <- inner_join(egresos_grd_2019, input_2019, by = "IdEstablecimiento")  %>% left_join(hospitales %>% select(hospital_id,region), by = c("IdEstablecimiento" = "hospital_id"))
# Añadir las etiquetas en el eje X
axis(1, at = 1:length(unique(resumen_dmu$Region)), labels = unique(resumen_dmu$Region), las = 2)
crear_grafico_eficiencia <- function(resultado_dea_2019_in_vrs, all_2019) {
# Obtener las eficiencias por DMU (hospitales)
eficiencias_dmu <- efficiencies(resultado_dea_2019_in_vrs)
# Crear un data frame con los nombres de los hospitales y sus eficiencias
resumen_dmu <- data.frame(
ID = all_2019$IdEstablecimiento,
Region = all_2019$region,
Eficiencia = eficiencias_dmu) %>%
arrange(Region, Eficiencia)
# Crear una paleta de colores para las regiones
colores_regiones <- rainbow(length(unique(resumen_dmu$Region)))
# Asignar un color a cada hospital basado en su región
resumen_dmu <- resumen_dmu %>%
mutate(Color = colores_regiones[as.numeric(as.factor(Region))])
# Crear el gráfico de puntos con colores por región
plot(resumen_dmu$Region, resumen_dmu$Eficiencia,
type = "p",
main = "Eficiencia de Hospitales en 2019",
xlab = "Región",
ylab = "Eficiencia",
ylim = c(0, 1),
xaxt = "n",
pch = 19,
col = resumen_dmu$Color)
# Añadir las etiquetas en el eje X
axis(1, at = 1:length(unique(resumen_dmu$Region)), labels = unique(resumen_dmu$Region), las = 2)
# Añadir líneas horizontales de referencia
abline(h = 1, col = "green", lty = 2)
abline(h = 0.8, col = "orange", lty = 2)
abline(h = 0.5, col = "red", lty = 2)
# Añadir una leyenda para los colores por región
legend("topright", legend = unique(resumen_dmu$Region), col = colores_regiones, pch = 19, title = "Región")
}
crear_grafico_eficiencia(resultado_dea_2019_in_vrs, all_2019)
crear_grafico_eficiencia(resultado_dea_2019_in_vrs, all_2019)
crear_grafico_eficiencia(resultado_dea_2019_in_crs, all_2019)
efficiency_in_crs <- efficiencies(resultado_dea_2019_in_crs)
# Aplicando DEA
# Orientado a los inputs
resultado_dea_2019_in_vrs <- dea(X = input_dea_2019, Y = output_dea_2019, RTS = "vrs", ORIENTATION = "in")
resultado_dea_2019_in_crs <- dea(X = input_dea_2019, Y = output_dea_2019, RTS = "crs", ORIENTATION = "in")
# Orientado a las salidas
resultado_dea_2019_out_vrs <- dea(X = input_dea_2019, Y = output_dea_2019, RTS = "vrs", ORIENTATION = "out")
resultado_dea_2019_out_crs <- dea(X = input_dea_2019, Y = output_dea_2019, RTS = "crs", ORIENTATION = "out")
crear_grafico_eficiencia(resultado_dea_2019_in_vrs, all_2019)
crear_grafico_eficiencia(resultado_dea_2019_in_crs, all_2019)
crear_grafico_eficiencia(resultado_dea_2019_out_vrs, all_2019)
crear_grafico_eficiencia(resultado_dea_2019_out_crs, all_2019)
crear_grafico_eficiencia(resultado_dea_2019_in_vrs, all_2019)
crear_grafico_eficiencia(resultado_dea_2019_in_crs, all_2019)
crear_grafico_eficiencia(resultado_dea_2019_in_vrs, all_2019)
crear_grafico_eficiencia(resultado_dea_2019_in_crs, all_2019)
crear_grafico_eficiencia(resultado_dea_2019_out_vrs, all_2019)
crear_grafico_eficiencia(resultado_dea_2019_out_crs, all_2019)
crear_grafico_eficiencia(resultado_dea_2019_in_vrs, all_2019)
crear_grafico_eficiencia <- function(resultado_dea_2019_in_vrs, all_2019) {
# Obtener las eficiencias por DMU (hospitales)
eficiencias_dmu <- efficiencies(resultado_dea_2019_in_vrs)
# Crear un data frame con los nombres de los hospitales y sus eficiencias
resumen_dmu <- data.frame(
ID = all_2019$IdEstablecimiento,
Region = all_2019$region,
Eficiencia = eficiencias_dmu) %>%
arrange(Region, Eficiencia)
# Crear una paleta de colores para las regiones
colores_regiones <- rainbow(length(unique(resumen_dmu$Region)))
# Asignar un color a cada hospital basado en su región
resumen_dmu <- resumen_dmu %>%
mutate(Color = colores_regiones[as.numeric(as.factor(Region))])
# Crear el gráfico de puntos con colores por región
plot(resumen_dmu$Region, resumen_dmu$Eficiencia,
type = "p",
main = "Eficiencia de Hospitales en 2019",
xlab = "Región",
ylab = "Eficiencia",
ylim = c(0, 1),
xaxt = "n",
pch = 19,
col = resumen_dmu$Color)
# Añadir las etiquetas en el eje X
axis(1, at = 1:length(unique(resumen_dmu$Region)), labels = unique(resumen_dmu$Region), las = 2)
# Añadir líneas horizontales de referencia
abline(h = 1, col = "green", lty = 2)
abline(h = 0.8, col = "orange", lty = 2)
abline(h = 0.5, col = "red", lty = 2)
abline(h = 0, col = "red", lty = 2)
# Añadir una leyenda para los colores por región
legend("topright", inset = c(-0.25, 0), legend = unique(resumen_dmu$Region), col = colores_regiones, pch = 19, title = "Región", xpd = TRUE)
}
crear_grafico_eficiencia(resultado_dea_2019_in_vrs, all_2019)
crear_grafico_eficiencia(resultado_dea_2019_in_crs, all_2019)
crear_grafico_eficiencia(resultado_dea_2019_out_vrs, all_2019)
crear_grafico_eficiencia(resultado_dea_2019_out_crs, all_2019)
source("~/Escritorio/Seminario/Taller/Taller.R")
source("~/Escritorio/Seminario/Taller/Taller.R")
